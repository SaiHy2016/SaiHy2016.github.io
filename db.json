{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/apple-touch-icon.png","path":"apple-touch-icon.png","modified":1,"renderable":0},{"_id":"source/favicon.ico","path":"favicon.ico","modified":1,"renderable":0},{"_id":"themes/BlueLake/source/apple-touch-icon.png","path":"apple-touch-icon.png","modified":1,"renderable":1},{"_id":"themes/BlueLake/source/favicon.ico","path":"favicon.ico","modified":1,"renderable":1},{"_id":"themes/BlueLake/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"themes/BlueLake/source/css/highlight.styl","path":"css/highlight.styl","modified":1,"renderable":1},{"_id":"themes/BlueLake/source/iconfont/iconfont.eot","path":"iconfont/iconfont.eot","modified":1,"renderable":1},{"_id":"themes/BlueLake/source/iconfont/iconfont.svg","path":"iconfont/iconfont.svg","modified":1,"renderable":1},{"_id":"themes/BlueLake/source/iconfont/iconfont.ttf","path":"iconfont/iconfont.ttf","modified":1,"renderable":1},{"_id":"themes/BlueLake/source/iconfont/iconfont.woff","path":"iconfont/iconfont.woff","modified":1,"renderable":1},{"_id":"themes/BlueLake/source/js/search.json.js","path":"js/search.json.js","modified":1,"renderable":1},{"_id":"themes/BlueLake/source/js/toctotop.js","path":"js/toctotop.js","modified":1,"renderable":1},{"_id":"themes/BlueLake/source/js/totop.js","path":"js/totop.js","modified":1,"renderable":1},{"_id":"themes/BlueLake/source/img/bg.jpg","path":"img/bg.jpg","modified":1,"renderable":1}],"Cache":[{"_id":"source/apple-touch-icon.png","hash":"98f0ecbdcdc1a0e8e52f4d786cbc011e5e06fa65","modified":1497316290832},{"_id":"source/favicon.ico","hash":"94e5d25d942bff5479470322454c951f2ddebac6","modified":1497316290832},{"_id":"themes/BlueLake/LICENSE","hash":"4c3927c82d0aa4fac5cdf945e07afe5e24335891","modified":1497406995233},{"_id":"themes/BlueLake/README.md","hash":"66c3ef7a779b6d65bad90daa2e03bcb7a1bb742f","modified":1497408454927},{"_id":"themes/BlueLake/_config.yml","hash":"f9bdecdea72e0aebd2d9b5bd73af8b61df576fe9","modified":1497407372114},{"_id":"themes/BlueLake/package.json","hash":"cdef382c442618b24305fd3e38ac7a3accf87aa9","modified":1497406995244},{"_id":"source/_posts/ejs模板语法.md","hash":"0307803abaedd7b62e3340c6eee214256356331c","modified":1497316290819},{"_id":"source/_posts/git远程服务器的搭建.md","hash":"86c41b6a31127413e214259214d1e65261e1e43d","modified":1497410088803},{"_id":"source/_posts/hello-world.md","hash":"3b15491ea0ec019a864692aedf51e572f2006e99","modified":1497316290829},{"_id":"source/_posts/hexo博客搭好啦.md","hash":"da22b72ca0e0e0e19be4cb4c481aa4328b966dfe","modified":1497316290829},{"_id":"source/_posts/markdown语法教程.md","hash":"30c509d5e1d037f1c6448841e88657437a53553f","modified":1497316290829},{"_id":"source/_posts/meta的一些设置.md","hash":"95fa677553a0784812170d11c1477e30b095babd","modified":1497316290830},{"_id":"source/_posts/placeholder的支持.md","hash":"bd59f9dbf5ec67f5b7597de17b94db8fbe809fc2","modified":1497316290830},{"_id":"source/_posts/图片预览上传.md","hash":"8ee80f4d1ec09967d11a5c083f1fc7a66baadb42","modified":1497316290830},{"_id":"source/_posts/省略号动画.md","hash":"a7ec7dea2161ac59bd3d0c57235ccb04b9df8fb3","modified":1497316290830},{"_id":"source/_posts/移动端touch事件.md","hash":"c7215881edc1e209bd1a4faee5974f8234bb849e","modified":1497316290831},{"_id":"source/_posts/防止网页被iframe嵌套.md","hash":"f6b2fa07fe1e7cb2756076388ed9c4e2ddae4ecf","modified":1497316290831},{"_id":"source/about/index.md","hash":"4303290cbd3b06fe856d6e797b09d8c0ad580c01","modified":1497316290831},{"_id":"themes/BlueLake/languages/de-DE.yml","hash":"dc31ee38b5901afaf142937c7d590ae414b216e6","modified":1497406995235},{"_id":"themes/BlueLake/languages/en.yml","hash":"e806d2e6d9cdc521ee91af6b6c492e5ba1f44f51","modified":1497406995235},{"_id":"themes/BlueLake/languages/es-ES.yml","hash":"e987784d4d1d011c2bd2cc5055195d4fae78d4a7","modified":1497406995235},{"_id":"themes/BlueLake/languages/fr-FR.yml","hash":"49d961a801421ab149bd2740ba84800278f522cd","modified":1497406995235},{"_id":"themes/BlueLake/languages/ko.yml","hash":"405adf1a7376b3fe90aafe8f1f8656a9c14bc7d2","modified":1497406995236},{"_id":"themes/BlueLake/languages/tr.yml","hash":"e13668c57d7d20b45a0495d72d5093cddbaafac7","modified":1497406995236},{"_id":"themes/BlueLake/languages/zh-CN.yml","hash":"ddad18db48d840a9c79abd5f0b4c509e0b9018e0","modified":1497406995236},{"_id":"themes/BlueLake/languages/zh-TW.yml","hash":"661d8c11616423e3a94eab25d9a15507bc57d5df","modified":1497406995237},{"_id":"themes/BlueLake/layout/archive.jade","hash":"98d9fb812edbc180878fdadb65bc38499eef2cc4","modified":1497406995242},{"_id":"themes/BlueLake/layout/base.jade","hash":"3805aaa6e96916e810b22d6a20d995f1fd3bf365","modified":1497406995243},{"_id":"themes/BlueLake/layout/category.jade","hash":"9f3a9f1d6f0bbad258b308ad8d49128c05b422cf","modified":1497406995243},{"_id":"themes/BlueLake/layout/index.jade","hash":"4c939c46caa957168da9d69f0f97bdc97dadd532","modified":1497406995243},{"_id":"themes/BlueLake/layout/page.jade","hash":"415404398931d98db28bff723886b07dcb8bbbc3","modified":1497406995243},{"_id":"themes/BlueLake/layout/post.jade","hash":"da406e6fa299c916c7dfb34ddd2840fa30fb7a96","modified":1497406995244},{"_id":"themes/BlueLake/layout/tag.jade","hash":"50c7af7565751db5d7672beb434768885fb224cb","modified":1497406995244},{"_id":"themes/BlueLake/source/apple-touch-icon.png","hash":"98f0ecbdcdc1a0e8e52f4d786cbc011e5e06fa65","modified":1497406995245},{"_id":"themes/BlueLake/source/favicon.ico","hash":"94e5d25d942bff5479470322454c951f2ddebac6","modified":1497406995246},{"_id":"themes/BlueLake/layout/_partial/after_footer.jade","hash":"3f11d2b5a4c647bf2b37c4d00bdc250cda80b770","modified":1497406995237},{"_id":"themes/BlueLake/layout/_partial/comment_count.jade","hash":"b2c66750430d6f08f95e3b01367dc1db3aa1970e","modified":1497406995237},{"_id":"themes/BlueLake/layout/_partial/comments.jade","hash":"c1f1955d12aee22a931a3f4ad9d0e9a408e80f3c","modified":1497406995238},{"_id":"themes/BlueLake/layout/_partial/comments_js.jade","hash":"4f0659406198f869eb437c4614d3c2ee6542faf0","modified":1497406995238},{"_id":"themes/BlueLake/layout/_partial/footer.jade","hash":"e0aa5d7adc1218a324a484abe3513e9545f89067","modified":1497406995238},{"_id":"themes/BlueLake/layout/_partial/helpers.jade","hash":"9e44f6d32f2449b4109c33118f8285fa2fc7b023","modified":1497406995239},{"_id":"themes/BlueLake/layout/_partial/mathjax.jade","hash":"ac6e3a92bf18ab6bbd0e041b6796b295bae963ee","modified":1497406995239},{"_id":"themes/BlueLake/layout/_partial/mathjax2.jade","hash":"234a792e64ba208fa97d2f99772ece23056a53ec","modified":1497406995239},{"_id":"themes/BlueLake/layout/_partial/paginator.jade","hash":"03ad0c49ae6f8a999ae35b38d08e25775f51f52a","modified":1497406995239},{"_id":"themes/BlueLake/layout/_partial/post_nav.jade","hash":"b11d9e6000449838b17f508429f29ffb60f53096","modified":1497406995239},{"_id":"themes/BlueLake/layout/_partial/search.jade","hash":"4f2fba7fcb39a6bf70ff04dad9a3dab2563b21e7","modified":1497406995240},{"_id":"themes/BlueLake/layout/_partial/share.jade","hash":"ba0839518db2cb9dafee67ca5e471219bfba2e90","modified":1497406995240},{"_id":"themes/BlueLake/layout/_partial/tag.jade","hash":"6145b483b271bba05ad1db7c039fe352a768215b","modified":1497406995240},{"_id":"themes/BlueLake/layout/_partial/totop.jade","hash":"c632919f04194dcf6e0e8ccc572554a859aa922b","modified":1497406995240},{"_id":"themes/BlueLake/layout/_widget/archive.jade","hash":"6e587b7d254d0d92b959ba58262f5e81b618eba2","modified":1497406995241},{"_id":"themes/BlueLake/layout/_widget/category.jade","hash":"0107affa0c6b22e09546fcf82a6f71ba2dd1e315","modified":1497406995241},{"_id":"themes/BlueLake/layout/_widget/links.jade","hash":"9af40206a525db1cb9761fa6facb36332057acf3","modified":1497406995241},{"_id":"themes/BlueLake/layout/_widget/recent_comments.jade","hash":"164a83faaf92ec19d268fd303bf6e30348ddef5c","modified":1497406995241},{"_id":"themes/BlueLake/layout/_widget/recent_posts.jade","hash":"c6f778d5d2f13bacbd83a56a9e9faaeac0dda0ed","modified":1497406995242},{"_id":"themes/BlueLake/layout/_widget/tag.jade","hash":"c75308c2b72456cfb98cb80f280c66e58f171705","modified":1497406995242},{"_id":"themes/BlueLake/layout/_widget/weibo.jade","hash":"4e90378aa88c5694126dc8ea5bed3bb2f8642e53","modified":1497406995242},{"_id":"themes/BlueLake/source/css/style.styl","hash":"6387f2664d3ccd7c5c2761e40a5dc4658bda67a5","modified":1497406995246},{"_id":"themes/BlueLake/source/css/highlight.styl","hash":"92b5c306f276f8ea6a134e303b1b63612d25ecfe","modified":1497406995245},{"_id":"themes/BlueLake/source/iconfont/iconfont.eot","hash":"e664dd848ca65fe3aca4acfc234ff9c18ffd4c33","modified":1497406995247},{"_id":"themes/BlueLake/source/iconfont/iconfont.svg","hash":"a910f5840f8e25b7a6e5c47b9a04ae49b9db8c32","modified":1497406995247},{"_id":"themes/BlueLake/source/iconfont/iconfont.ttf","hash":"5770696cc0d19d9c9479912a5cf54c9dd4ab24c4","modified":1497406995248},{"_id":"themes/BlueLake/source/iconfont/iconfont.woff","hash":"df2bd849134cbd02beb385e5061a30b923c99058","modified":1497406995248},{"_id":"themes/BlueLake/source/js/search.json.js","hash":"7ce826f7b678ff3c524fce8bbd480c188e50c7ee","modified":1497406995250},{"_id":"themes/BlueLake/source/js/toctotop.js","hash":"9e68d688f2f12ec193ce9496beb0fd42e1de2288","modified":1497406995250},{"_id":"themes/BlueLake/source/js/totop.js","hash":"d9367c6fa3e973bc5f32ce38d951858455726a02","modified":1497406995251},{"_id":"themes/BlueLake/source/img/bg.jpg","hash":"d23d92484e98adcbea7266ebfdfef7fb3fc42ee0","modified":1497406995249},{"_id":"source/_posts/ejs模板语法/filter1.png","hash":"cbc2a32ed254a0006b0d1c17d3898cbe66e2fff5","modified":1497316290821},{"_id":"source/_posts/ejs模板语法/filter3.png","hash":"30a600fa7062b0ede36ca035be219ab975f40e59","modified":1497316290826},{"_id":"source/_posts/ejs模板语法/option.png","hash":"f54c40cf417da394756da1756f66c5ed8afb0005","modified":1497316290828},{"_id":"source/_posts/ejs模板语法/filter2.png","hash":"29eb43340e727b37701c7cfa1507836b2cd3f668","modified":1497316290823},{"_id":"public/baidusitemap.xml","hash":"ef7ca51e69f636200c2a5c88f1983d790c4837f5","modified":1497410319463},{"_id":"public/atom.xml","hash":"17f61be3f5c24d57777c8a41778ebb8dc04af4ff","modified":1497410319470},{"_id":"public/content.json","hash":"783f2bd693ed20ef15e7d42169157b172aaeb1c0","modified":1497410319471},{"_id":"public/sitemap.xml","hash":"e2f22e3c120ae0f25ab52225e0b97d2fe6c11a8d","modified":1497410319471},{"_id":"public/about/index.html","hash":"fb216968b5d2bc12b58c84026d1461f5f95c7117","modified":1497410319478},{"_id":"public/2017/06/10/ejs模板语法/index.html","hash":"dcc6a9c857190d95dcf5a629c9afb3c3d3f2a817","modified":1497410319478},{"_id":"public/2017/06/06/防止网页被iframe嵌套/index.html","hash":"b2e5aafa73223582f90d7f2745310dc31916b421","modified":1497410319478},{"_id":"public/2017/06/05/省略号动画/index.html","hash":"e29d5ba1496462e4f59b868fef754be63a644d32","modified":1497410319479},{"_id":"public/2017/06/01/placeholder的支持/index.html","hash":"09113e3d347ed966cdec971403ff92932f3525b7","modified":1497410319481},{"_id":"public/2017/05/28/移动端touch事件/index.html","hash":"27a5136a8a75f621ad24f385e629e4367e76f1f3","modified":1497410319482},{"_id":"public/2017/05/25/markdown语法教程/index.html","hash":"f15bfec166c88e2cecf0ed59ce8d5a0bb9951bd9","modified":1497410319482},{"_id":"public/2017/05/20/hexo博客搭好啦/index.html","hash":"d2cf3b0e7b50342b760319f6d8e12d6728d805d3","modified":1497410319482},{"_id":"public/2017/05/18/hello-world/index.html","hash":"571006cd54ccc510274352affd5665fa83c701a7","modified":1497410319482},{"_id":"public/index.html","hash":"0dcadad3bd82202d8e63085bccc9f3ed22a61181","modified":1497410319482},{"_id":"public/page/2/index.html","hash":"521bd6a3f0088aa3a36062d7bd46a592a2983704","modified":1497410319482},{"_id":"public/tags/学习/index.html","hash":"bda13a59f693cf0ac299815cda41425d1bca43c4","modified":1497410319482},{"_id":"public/tags/git/index.html","hash":"d255ac619fb26f71d0462c09f9be997808c28329","modified":1497410319482},{"_id":"public/tags/随笔/index.html","hash":"23761f1e71d9d753820328d75ad94d39816b8d0a","modified":1497410319482},{"_id":"public/archives/index.html","hash":"881bf26417298ebde414e9e7fba42a7f0b6bfe01","modified":1497410319482},{"_id":"public/archives/page/2/index.html","hash":"8083fa7837e2fdb573d6468b5b0bdce90fb1fcf6","modified":1497410319483},{"_id":"public/archives/2017/index.html","hash":"6a0b8ae6537d13478de1a2c164e8453a80cb91d8","modified":1497410319483},{"_id":"public/archives/2017/page/2/index.html","hash":"8afdbb4a81e4868b989655683641362033b76dd2","modified":1497410319484},{"_id":"public/archives/2017/05/index.html","hash":"021cb9804214e43866e48263b45fd89dc40e1156","modified":1497410319484},{"_id":"public/archives/2017/06/index.html","hash":"8f50d3c6d09c26c4b6d04e6c9085b524c07bdb5e","modified":1497410319484},{"_id":"public/2017/06/13/git远程服务器的搭建/index.html","hash":"c13c24230e671dfde0400be59eb760505ec37f0a","modified":1497410319484},{"_id":"public/2017/06/07/meta的一些设置/index.html","hash":"3373e53c147a88db3cec25855ea4312816c59aac","modified":1497410319484},{"_id":"public/2017/05/27/图片预览上传/index.html","hash":"f139d45bbf1a47db506c018387d48a7f045fa8b0","modified":1497410319485},{"_id":"public/apple-touch-icon.png","hash":"98f0ecbdcdc1a0e8e52f4d786cbc011e5e06fa65","modified":1497410319492},{"_id":"public/favicon.ico","hash":"94e5d25d942bff5479470322454c951f2ddebac6","modified":1497410319492},{"_id":"public/iconfont/iconfont.eot","hash":"e664dd848ca65fe3aca4acfc234ff9c18ffd4c33","modified":1497410319492},{"_id":"public/iconfont/iconfont.svg","hash":"a910f5840f8e25b7a6e5c47b9a04ae49b9db8c32","modified":1497410319492},{"_id":"public/iconfont/iconfont.ttf","hash":"5770696cc0d19d9c9479912a5cf54c9dd4ab24c4","modified":1497410319492},{"_id":"public/iconfont/iconfont.woff","hash":"df2bd849134cbd02beb385e5061a30b923c99058","modified":1497410319492},{"_id":"public/img/bg.jpg","hash":"d23d92484e98adcbea7266ebfdfef7fb3fc42ee0","modified":1497410320084},{"_id":"public/css/highlight.css","hash":"932879716cbce6f9a1b830070ed514082398f1ca","modified":1497410320089},{"_id":"public/js/search.json.js","hash":"a0e8dfee9b9845aabd64360d497df7c0767b7235","modified":1497410320089},{"_id":"public/js/toctotop.js","hash":"ad6386bc746ff375715ca9da17af4716ea86e06a","modified":1497410320090},{"_id":"public/js/totop.js","hash":"5b1131830209c2daaf6fe34c5e39ab7c1059bfa4","modified":1497410320090},{"_id":"public/css/style.css","hash":"2d3c83c56f744fda4061dec720a4cad4fec57fbc","modified":1497410320090},{"_id":"public/2017/06/10/ejs模板语法/filter1.png","hash":"cbc2a32ed254a0006b0d1c17d3898cbe66e2fff5","modified":1497410320108},{"_id":"public/2017/06/10/ejs模板语法/filter3.png","hash":"30a600fa7062b0ede36ca035be219ab975f40e59","modified":1497410320108},{"_id":"public/2017/06/10/ejs模板语法/option.png","hash":"f54c40cf417da394756da1756f66c5ed8afb0005","modified":1497410320108},{"_id":"public/2017/06/10/ejs模板语法/filter2.png","hash":"29eb43340e727b37701c7cfa1507836b2cd3f668","modified":1497410320112}],"Category":[],"Data":[],"Page":[{"title":"about","date":"2017-05-20T06:28:03.000Z","_content":"","source":"about/index.md","raw":"---\ntitle: about\ndate: 2017-05-20 14:28:03\n---\n","updated":"2017-06-13T01:11:30.831Z","path":"about/index.html","comments":1,"layout":"page","_id":"cj3wffvme0001vsrjd6ewkr9s","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"ejs模板语法","date":"2017-06-10T00:16:16.000Z","_content":"1、EJS是一个简单高效的模板语言，通过数据和模板，可以生成HTML标记文本。可以说EJS是一个JavaScript库，EJS可以同时运行在客户端和服务器端，客户端安装直接引入文件即可，服务器端用npm包安装\n\n2、EJS的特点：\n\n* 快速编译和渲染\n* 简单的模板标签\n* 自定义标记分隔符\n* 支持文本包含\n* 支持浏览器端和服务器端\n* 模板静态缓存\n* 支持express视图系统\n\n3、EJS成员函数：\n\n* Render(str,data,[option]):直接渲染字符串并生成html<br>\nstr：需要解析的字符串模板<br>\ndata：数据<br>\noption：配置选项<br>\n\n* Compile(str,[option]):编译字符串得到模板函数<br>\nstr：需要解析的字符串模板<br>\noption：配置选项<br>\n\n两个函数包括的配置选项如下：\n![option配置](./ejs模板语法/option.png 'option配置')\n\n4、EJS常用标签\n\n* <% %>流程控制标签\n* <%= %>输出标签（原文输出HTML标签）\n* <%- %>输出标签（HTML会被浏览器解析）\n* <%# %>注释标签\n* % 对标记进行转义\n* -%>去掉没用的空格\n\n  说明：ejs中的逻辑代码全部用JavaScript\n  \n5、接下来看一个例子就可以明白EJS的简单语法了\n\n```ejs\n<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n<title>EJS Examples</title>\n<meta name=\"description\" content=\"\">\n<meta name=\"keywords\" content=\"\">\n<link href=\"\" rel=\"stylesheet\">\n<script type=\"text/javascript\" src=\"ejs.min.js\"></script>\n<script >\n    var data={flag:false,\n                   data1:[\"====1\",\"====2\",\"====3\"],\n                   data2:[\"====4\",\"====5\",\"====6\"]\n               };\n\n    window.onload=function(){\n        var tem=document.getElementById(\"tem\").innerHTML;\n        var html=ejs.render(tem,data);\n        document.getElementsByTagName(\"body\")[0].innerHTML=html;\n    }\n</script>\n</head>\n<body>\n<script type=\"text/javascript\" id=\"tem\">\n<ul>\n    <%if(flag){%>\n      <%for (var i=0;i<data1.length;i++){%>\n      <li><%=data1[i]%></li>\n      <%}%>\n      <%}else{%>\n          <%for(var i=0;i<data2.length;i++){%>\n          <li><%=data2[i]%></li>\n          <%}%>\n          <%}%>\n      </ul>\n</script>\n</body>\n</html>\n```\n运行后结果如下：\n* ====4\n* ====5\n* ====6\n\n4、过滤器（把结果进一步加工的函数）：\n![](./ejs模板语法/filter1.png)\n![](./ejs模板语法/filter2.png)\n![](./ejs模板语法/filter3.png)\n\n语法如下：\n\n    <%=: data.age | plus:5%>\n\n  注意:和|两个符号:<br>\n此外，还有文件包含的语法：\n\n    <%- include(path) %>\n\n参考文章[地址](http://www.jianshu.com/p/67dda091fc68)","source":"_posts/ejs模板语法.md","raw":"---\ntitle: ejs模板语法\ndate: 2017-06-10 08:16:16\ntags: 学习\n---\n1、EJS是一个简单高效的模板语言，通过数据和模板，可以生成HTML标记文本。可以说EJS是一个JavaScript库，EJS可以同时运行在客户端和服务器端，客户端安装直接引入文件即可，服务器端用npm包安装\n\n2、EJS的特点：\n\n* 快速编译和渲染\n* 简单的模板标签\n* 自定义标记分隔符\n* 支持文本包含\n* 支持浏览器端和服务器端\n* 模板静态缓存\n* 支持express视图系统\n\n3、EJS成员函数：\n\n* Render(str,data,[option]):直接渲染字符串并生成html<br>\nstr：需要解析的字符串模板<br>\ndata：数据<br>\noption：配置选项<br>\n\n* Compile(str,[option]):编译字符串得到模板函数<br>\nstr：需要解析的字符串模板<br>\noption：配置选项<br>\n\n两个函数包括的配置选项如下：\n![option配置](./ejs模板语法/option.png 'option配置')\n\n4、EJS常用标签\n\n* <% %>流程控制标签\n* <%= %>输出标签（原文输出HTML标签）\n* <%- %>输出标签（HTML会被浏览器解析）\n* <%# %>注释标签\n* % 对标记进行转义\n* -%>去掉没用的空格\n\n  说明：ejs中的逻辑代码全部用JavaScript\n  \n5、接下来看一个例子就可以明白EJS的简单语法了\n\n```ejs\n<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n<title>EJS Examples</title>\n<meta name=\"description\" content=\"\">\n<meta name=\"keywords\" content=\"\">\n<link href=\"\" rel=\"stylesheet\">\n<script type=\"text/javascript\" src=\"ejs.min.js\"></script>\n<script >\n    var data={flag:false,\n                   data1:[\"====1\",\"====2\",\"====3\"],\n                   data2:[\"====4\",\"====5\",\"====6\"]\n               };\n\n    window.onload=function(){\n        var tem=document.getElementById(\"tem\").innerHTML;\n        var html=ejs.render(tem,data);\n        document.getElementsByTagName(\"body\")[0].innerHTML=html;\n    }\n</script>\n</head>\n<body>\n<script type=\"text/javascript\" id=\"tem\">\n<ul>\n    <%if(flag){%>\n      <%for (var i=0;i<data1.length;i++){%>\n      <li><%=data1[i]%></li>\n      <%}%>\n      <%}else{%>\n          <%for(var i=0;i<data2.length;i++){%>\n          <li><%=data2[i]%></li>\n          <%}%>\n          <%}%>\n      </ul>\n</script>\n</body>\n</html>\n```\n运行后结果如下：\n* ====4\n* ====5\n* ====6\n\n4、过滤器（把结果进一步加工的函数）：\n![](./ejs模板语法/filter1.png)\n![](./ejs模板语法/filter2.png)\n![](./ejs模板语法/filter3.png)\n\n语法如下：\n\n    <%=: data.age | plus:5%>\n\n  注意:和|两个符号:<br>\n此外，还有文件包含的语法：\n\n    <%- include(path) %>\n\n参考文章[地址](http://www.jianshu.com/p/67dda091fc68)","slug":"ejs模板语法","published":1,"updated":"2017-06-13T01:11:30.819Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3wffvm60000vsrjm0lrr5oe","content":"<p>1、EJS是一个简单高效的模板语言，通过数据和模板，可以生成HTML标记文本。可以说EJS是一个JavaScript库，EJS可以同时运行在客户端和服务器端，客户端安装直接引入文件即可，服务器端用npm包安装</p>\n<p>2、EJS的特点：</p>\n<ul>\n<li>快速编译和渲染</li>\n<li>简单的模板标签</li>\n<li>自定义标记分隔符</li>\n<li>支持文本包含</li>\n<li>支持浏览器端和服务器端</li>\n<li>模板静态缓存</li>\n<li>支持express视图系统</li>\n</ul>\n<p>3、EJS成员函数：</p>\n<ul>\n<li><p>Render(str,data,[option]):直接渲染字符串并生成html<br><br>str：需要解析的字符串模板<br><br>data：数据<br><br>option：配置选项<br></p>\n</li>\n<li><p>Compile(str,[option]):编译字符串得到模板函数<br><br>str：需要解析的字符串模板<br><br>option：配置选项<br></p>\n</li>\n</ul>\n<p>两个函数包括的配置选项如下：<br><img src=\"/2017/06/10/ejs模板语法/option.png\" alt=\"option配置\" title=\"option配置\"></p>\n<p>4、EJS常用标签</p>\n<ul>\n<li>&lt;% %&gt;流程控制标签</li>\n<li>&lt;%= %&gt;输出标签（原文输出HTML标签）</li>\n<li>&lt;%- %&gt;输出标签（HTML会被浏览器解析）</li>\n<li>&lt;%# %&gt;注释标签</li>\n<li>% 对标记进行转义</li>\n<li><p>-%&gt;去掉没用的空格</p>\n<p>说明：ejs中的逻辑代码全部用JavaScript</p>\n</li>\n</ul>\n<p>5、接下来看一个例子就可以明白EJS的简单语法了</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!DOCTYPE html&gt;</div><div class=\"line\">&lt;html&gt;</div><div class=\"line\">&lt;head&gt;</div><div class=\"line\">&lt;meta charset=&quot;utf-8&quot;&gt;</div><div class=\"line\">&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge,chrome=1&quot;&gt;</div><div class=\"line\">&lt;title&gt;EJS Examples&lt;/title&gt;</div><div class=\"line\">&lt;meta name=&quot;description&quot; content=&quot;&quot;&gt;</div><div class=\"line\">&lt;meta name=&quot;keywords&quot; content=&quot;&quot;&gt;</div><div class=\"line\">&lt;link href=&quot;&quot; rel=&quot;stylesheet&quot;&gt;</div><div class=\"line\">&lt;script type=&quot;text/javascript&quot; src=&quot;ejs.min.js&quot;&gt;&lt;/script&gt;</div><div class=\"line\">&lt;script &gt;</div><div class=\"line\">    var data=&#123;flag:false,</div><div class=\"line\">                   data1:[&quot;====1&quot;,&quot;====2&quot;,&quot;====3&quot;],</div><div class=\"line\">                   data2:[&quot;====4&quot;,&quot;====5&quot;,&quot;====6&quot;]</div><div class=\"line\">               &#125;;</div><div class=\"line\"></div><div class=\"line\">    window.onload=function()&#123;</div><div class=\"line\">        var tem=document.getElementById(&quot;tem&quot;).innerHTML;</div><div class=\"line\">        var html=ejs.render(tem,data);</div><div class=\"line\">        document.getElementsByTagName(&quot;body&quot;)[0].innerHTML=html;</div><div class=\"line\">    &#125;</div><div class=\"line\">&lt;/script&gt;</div><div class=\"line\">&lt;/head&gt;</div><div class=\"line\">&lt;body&gt;</div><div class=\"line\">&lt;script type=&quot;text/javascript&quot; id=&quot;tem&quot;&gt;</div><div class=\"line\">&lt;ul&gt;</div><div class=\"line\">    &lt;%if(flag)&#123;%&gt;</div><div class=\"line\">      &lt;%for (var i=0;i&lt;data1.length;i++)&#123;%&gt;</div><div class=\"line\">      &lt;li&gt;&lt;%=data1[i]%&gt;&lt;/li&gt;</div><div class=\"line\">      &lt;%&#125;%&gt;</div><div class=\"line\">      &lt;%&#125;else&#123;%&gt;</div><div class=\"line\">          &lt;%for(var i=0;i&lt;data2.length;i++)&#123;%&gt;</div><div class=\"line\">          &lt;li&gt;&lt;%=data2[i]%&gt;&lt;/li&gt;</div><div class=\"line\">          &lt;%&#125;%&gt;</div><div class=\"line\">          &lt;%&#125;%&gt;</div><div class=\"line\">      &lt;/ul&gt;</div><div class=\"line\">&lt;/script&gt;</div><div class=\"line\">&lt;/body&gt;</div><div class=\"line\">&lt;/html&gt;</div></pre></td></tr></table></figure>\n<p>运行后结果如下：</p>\n<ul>\n<li>====4</li>\n<li>====5</li>\n<li>====6</li>\n</ul>\n<p>4、过滤器（把结果进一步加工的函数）：<br><img src=\"/2017/06/10/ejs模板语法/filter1.png\" alt=\"\"><br><img src=\"/2017/06/10/ejs模板语法/filter2.png\" alt=\"\"><br><img src=\"/2017/06/10/ejs模板语法/filter3.png\" alt=\"\"></p>\n<p>语法如下：</p>\n<pre><code>&lt;%=: data.age | plus:5%&gt;\n</code></pre><p>  注意:和|两个符号:<br><br>此外，还有文件包含的语法：</p>\n<pre><code>&lt;%- include(path) %&gt;\n</code></pre><p>参考文章<a href=\"http://www.jianshu.com/p/67dda091fc68\" target=\"_blank\" rel=\"external\">地址</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>1、EJS是一个简单高效的模板语言，通过数据和模板，可以生成HTML标记文本。可以说EJS是一个JavaScript库，EJS可以同时运行在客户端和服务器端，客户端安装直接引入文件即可，服务器端用npm包安装</p>\n<p>2、EJS的特点：</p>\n<ul>\n<li>快速编译和渲染</li>\n<li>简单的模板标签</li>\n<li>自定义标记分隔符</li>\n<li>支持文本包含</li>\n<li>支持浏览器端和服务器端</li>\n<li>模板静态缓存</li>\n<li>支持express视图系统</li>\n</ul>\n<p>3、EJS成员函数：</p>\n<ul>\n<li><p>Render(str,data,[option]):直接渲染字符串并生成html<br><br>str：需要解析的字符串模板<br><br>data：数据<br><br>option：配置选项<br></p>\n</li>\n<li><p>Compile(str,[option]):编译字符串得到模板函数<br><br>str：需要解析的字符串模板<br><br>option：配置选项<br></p>\n</li>\n</ul>\n<p>两个函数包括的配置选项如下：<br><img src=\"/2017/06/10/ejs模板语法/option.png\" alt=\"option配置\" title=\"option配置\"></p>\n<p>4、EJS常用标签</p>\n<ul>\n<li>&lt;% %&gt;流程控制标签</li>\n<li>&lt;%= %&gt;输出标签（原文输出HTML标签）</li>\n<li>&lt;%- %&gt;输出标签（HTML会被浏览器解析）</li>\n<li>&lt;%# %&gt;注释标签</li>\n<li>% 对标记进行转义</li>\n<li><p>-%&gt;去掉没用的空格</p>\n<p>说明：ejs中的逻辑代码全部用JavaScript</p>\n</li>\n</ul>\n<p>5、接下来看一个例子就可以明白EJS的简单语法了</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!DOCTYPE html&gt;</div><div class=\"line\">&lt;html&gt;</div><div class=\"line\">&lt;head&gt;</div><div class=\"line\">&lt;meta charset=&quot;utf-8&quot;&gt;</div><div class=\"line\">&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge,chrome=1&quot;&gt;</div><div class=\"line\">&lt;title&gt;EJS Examples&lt;/title&gt;</div><div class=\"line\">&lt;meta name=&quot;description&quot; content=&quot;&quot;&gt;</div><div class=\"line\">&lt;meta name=&quot;keywords&quot; content=&quot;&quot;&gt;</div><div class=\"line\">&lt;link href=&quot;&quot; rel=&quot;stylesheet&quot;&gt;</div><div class=\"line\">&lt;script type=&quot;text/javascript&quot; src=&quot;ejs.min.js&quot;&gt;&lt;/script&gt;</div><div class=\"line\">&lt;script &gt;</div><div class=\"line\">    var data=&#123;flag:false,</div><div class=\"line\">                   data1:[&quot;====1&quot;,&quot;====2&quot;,&quot;====3&quot;],</div><div class=\"line\">                   data2:[&quot;====4&quot;,&quot;====5&quot;,&quot;====6&quot;]</div><div class=\"line\">               &#125;;</div><div class=\"line\"></div><div class=\"line\">    window.onload=function()&#123;</div><div class=\"line\">        var tem=document.getElementById(&quot;tem&quot;).innerHTML;</div><div class=\"line\">        var html=ejs.render(tem,data);</div><div class=\"line\">        document.getElementsByTagName(&quot;body&quot;)[0].innerHTML=html;</div><div class=\"line\">    &#125;</div><div class=\"line\">&lt;/script&gt;</div><div class=\"line\">&lt;/head&gt;</div><div class=\"line\">&lt;body&gt;</div><div class=\"line\">&lt;script type=&quot;text/javascript&quot; id=&quot;tem&quot;&gt;</div><div class=\"line\">&lt;ul&gt;</div><div class=\"line\">    &lt;%if(flag)&#123;%&gt;</div><div class=\"line\">      &lt;%for (var i=0;i&lt;data1.length;i++)&#123;%&gt;</div><div class=\"line\">      &lt;li&gt;&lt;%=data1[i]%&gt;&lt;/li&gt;</div><div class=\"line\">      &lt;%&#125;%&gt;</div><div class=\"line\">      &lt;%&#125;else&#123;%&gt;</div><div class=\"line\">          &lt;%for(var i=0;i&lt;data2.length;i++)&#123;%&gt;</div><div class=\"line\">          &lt;li&gt;&lt;%=data2[i]%&gt;&lt;/li&gt;</div><div class=\"line\">          &lt;%&#125;%&gt;</div><div class=\"line\">          &lt;%&#125;%&gt;</div><div class=\"line\">      &lt;/ul&gt;</div><div class=\"line\">&lt;/script&gt;</div><div class=\"line\">&lt;/body&gt;</div><div class=\"line\">&lt;/html&gt;</div></pre></td></tr></table></figure>\n<p>运行后结果如下：</p>\n<ul>\n<li>====4</li>\n<li>====5</li>\n<li>====6</li>\n</ul>\n<p>4、过滤器（把结果进一步加工的函数）：<br><img src=\"/2017/06/10/ejs模板语法/filter1.png\" alt=\"\"><br><img src=\"/2017/06/10/ejs模板语法/filter2.png\" alt=\"\"><br><img src=\"/2017/06/10/ejs模板语法/filter3.png\" alt=\"\"></p>\n<p>语法如下：</p>\n<pre><code>&lt;%=: data.age | plus:5%&gt;\n</code></pre><p>  注意:和|两个符号:<br><br>此外，还有文件包含的语法：</p>\n<pre><code>&lt;%- include(path) %&gt;\n</code></pre><p>参考文章<a href=\"http://www.jianshu.com/p/67dda091fc68\" target=\"_blank\" rel=\"external\">地址</a></p>\n"},{"title":"git远程服务器的搭建","date":"2017-06-13T01:40:24.000Z","_content":"目标：本地使用git push后可以把本地代码提交到vps的git服务器和github上\n\n## 在vps设置Git用户并安装Git\n\n登陆vps，切换到root用户：\n\n    su -\n添加一个叫git的用户来处理仓库：\n\n    groupadd git\n    adduser git -g git\n然后为这个账户设置密码：\n\n    passwd git\n然后就是装git了：<br>\nCentos/Fedora 执行命令：\n\n    yum install git\nUbuntu/Debian 执行命令：\n\n    apt-get install git\n\n## 将SSH密钥添加到访问列表（其实就是个ssh免密码登陆）\n\n下面是在vps上进行操作：<br>\n切换到git账户：\n\n    su git\n将刚才产生的 id_rsa.pub 文件上传到git用户的home目录下（/home/git/）。<br>\n然后告诉SSH守护进程去接受哪些ssh密钥：\n\n    mkdir ~/.ssh && touch ~/.ssh/authorized_keys\n下面是`windows`上的操作：\n\n>如果你的vps ssh端口号不是22可以在本地.ssh文件夹下配置个config文件（没有新建）\n\n    host bwg\n    hostname xx.xx.xx.xx\n    port xxxx\n\n打开git bash，执行下面的命令，将产生的公钥内容拷贝到vps上的authorized_keys (注意替换命令中的用户名和ip) ：\n\n    cat .ssh/id_rsa.pub | ssh  git@bwg \"cat >> ~/.ssh/authorized_keys\"\n然后看看能不能免密码登陆：\n\n    ssh  git@bwg\n第一次登陆的时候会让你输入密码，以后再登陆就不需要输入密码了。\n\n=====================================\n\n如果每次登陆都需要密码，则按照如下方法处理：<br>\n1.进行ssh登录时，出现：”Agent admitted failure to sign using the key“ .<br>\n   执行： \n   \n    $ssh-add\n   强行将私钥 加进来。<br>\n2.如果无任何错误提示，可以输密码登录，但就是不能无密码登录，在被连接的主机上（如A向B发起ssh连接，则在B上）执行以下几步：\n\n    $chmod o-w ~/<br>\n    $chmod 700 ~/.ssh<br>\n    $chmod 600 ~/.ssh/authorized_keys<br>\n3.如果执行了第2步，还是不能无密码登录，再试试下面几个\n\n    $ps -Af | grep agent<br>\n检查ssh代理是否开启，如果有开启的话，kill掉该代理，然后执行下面，重新打开一个ssh代理，如果没有开启，直接执行下面：\n\n    $ssh-agent\n还是不行的话，执行下面，重启一下ssh服务\n\n    $sudo service sshd restart\n4.执行ssh-add时提示“Could not open a connection to your authenticationh agent”而失败\n执行： \n    ssh-agent bash\n\n## 在服务器上创建裸版本库：\n\nps：远程仓库通常只是一个裸仓库（bare repository） — 即一个没有当前工作目录的仓库。因为该仓库只是一个合作媒介，所以不需要从硬盘上取出最新版本的快照；仓库里存放的仅仅是 Git 的数据。简单地说，裸仓库就是你工作目录中 .git 子目录内的内容\n\n我们就在 /home/testgit/ 下创建一个叫 sample.git的裸仓库吧：\n\n    mkdir /home/testgit\n    cd /home/testgit\n    git init --bare sample.git\n//这里 git init 是初始化空仓库的意思，而参数 --bare 是代表创建裸仓库，这个参数一定记得带上\n\n当运行完上面的最后一句命令时，会有提示：Initialized empty Git repository in /home/testgit/sample.git/ \n如果你得不到该结果，可能就要回头检查哪一步出问题了\n\n1. 创建web站点目录www\n\n如果你已经拥有lamp环境，那么相信你已经了解该目录，搭建lamp环境详情可以看我的另一篇博客：centos 7搭建lamp平台环境、Centos7 系统下怎么更改apache默认网站目录\n\n现在我的 web 站点目录在 /home/www\n\n2. 在本地克隆服务器上的裸仓库：\n\n前提：本地已安装git \n打开 git bash ，我打算在我的D盘下clone 远程git服务器的版本库\n\n    cd /d\n    git clone git@bwg:/home/testgit/sample.git \n\n在这里如果没有配置公钥的话，会提示输入密码，但是我们可能并不知道密码，那就配置公钥咯： \n\n如果使用git push失败了，极有可能是因为服务器的权限问题，就比如之前我们建的 testgit 文件夹，在这里我的解决方法是：\n\n    chown -R git:git testgit\n\n将testgit文件夹以及下面的子文件夹都赋给了git,这样就保证了推送成功。\n\n第一次push可能会有一些提示，因为裸版本库还什么都没有，你可能需要 git push origin master写全命令，之后就没必要了，直接 git push 就可以了。\n\n到目前为止，我们完成了第一个任务，实现了一个共享平台，既可拉取数据，又可以推送数据。\n\n## 实现自动同步到站点目录（www）\n\n就比如刚才我们往远程仓库推送了index.html文件，虽然提示推送成功，但是我们现在在服务器端还看不到效果，心理总是不爽。又比如我写了个html页面，我想在站点中马上看到，那自动同步就派上用场了。\n\n自动同步功能用到的是 git 的钩子功能，\n\n服务器端：进入裸仓库：/home/testgit/sample.git\n\n    cd /home/testgit/sample.git\n    cd hooks\n这里我们创建post-receive文件\n\n    vim post-receive\n在该文件里输入以下内容\n\n    #!/bin/bash\n    git --work-tree=/home/www checkout -f\n保存退出后，将该文件用户及用户组都设置成git\n\n    chown git:git post-receive\n由于该文件其实就是一个shell文件，我们还应该为其设置可执行权限\n\n    chmod +x post-receive\n现在我们可以在本地计算机中修改index.html文件，或者添加一个新文件，提交到远程仓库，然后到/home/www下面，看看有没有我们刚才提交的文件。\n\n如果你在Git推送的工程中发现推送成功 但是在www目录下并没有自己的代码，这时候你可要注意了：这是由于文件夹的权限的原因造成的！ 假设你的www目录的所属的用户组为root，你可以将你的git用户加入这个组;并给git添加写入权限，或者其他解决方法，反正你要服务器上的git用户有权限进入www文件夹。\n\n## 本地同时提交到vps的git服务器和github\n\n这里有个方便的方法：在本地仓库.git里config文件里加上你的github地址\n\n    [remote \"origin\"]\n\turl = git@bwg:/home/testgit/sample.git\n\turl = git@github.com:xxx/xxxx.git\n\t","source":"_posts/git远程服务器的搭建.md","raw":"---\ntitle: git远程服务器的搭建\ndate: 2017-06-13 09:40:24\ntags: git\n---\n目标：本地使用git push后可以把本地代码提交到vps的git服务器和github上\n\n## 在vps设置Git用户并安装Git\n\n登陆vps，切换到root用户：\n\n    su -\n添加一个叫git的用户来处理仓库：\n\n    groupadd git\n    adduser git -g git\n然后为这个账户设置密码：\n\n    passwd git\n然后就是装git了：<br>\nCentos/Fedora 执行命令：\n\n    yum install git\nUbuntu/Debian 执行命令：\n\n    apt-get install git\n\n## 将SSH密钥添加到访问列表（其实就是个ssh免密码登陆）\n\n下面是在vps上进行操作：<br>\n切换到git账户：\n\n    su git\n将刚才产生的 id_rsa.pub 文件上传到git用户的home目录下（/home/git/）。<br>\n然后告诉SSH守护进程去接受哪些ssh密钥：\n\n    mkdir ~/.ssh && touch ~/.ssh/authorized_keys\n下面是`windows`上的操作：\n\n>如果你的vps ssh端口号不是22可以在本地.ssh文件夹下配置个config文件（没有新建）\n\n    host bwg\n    hostname xx.xx.xx.xx\n    port xxxx\n\n打开git bash，执行下面的命令，将产生的公钥内容拷贝到vps上的authorized_keys (注意替换命令中的用户名和ip) ：\n\n    cat .ssh/id_rsa.pub | ssh  git@bwg \"cat >> ~/.ssh/authorized_keys\"\n然后看看能不能免密码登陆：\n\n    ssh  git@bwg\n第一次登陆的时候会让你输入密码，以后再登陆就不需要输入密码了。\n\n=====================================\n\n如果每次登陆都需要密码，则按照如下方法处理：<br>\n1.进行ssh登录时，出现：”Agent admitted failure to sign using the key“ .<br>\n   执行： \n   \n    $ssh-add\n   强行将私钥 加进来。<br>\n2.如果无任何错误提示，可以输密码登录，但就是不能无密码登录，在被连接的主机上（如A向B发起ssh连接，则在B上）执行以下几步：\n\n    $chmod o-w ~/<br>\n    $chmod 700 ~/.ssh<br>\n    $chmod 600 ~/.ssh/authorized_keys<br>\n3.如果执行了第2步，还是不能无密码登录，再试试下面几个\n\n    $ps -Af | grep agent<br>\n检查ssh代理是否开启，如果有开启的话，kill掉该代理，然后执行下面，重新打开一个ssh代理，如果没有开启，直接执行下面：\n\n    $ssh-agent\n还是不行的话，执行下面，重启一下ssh服务\n\n    $sudo service sshd restart\n4.执行ssh-add时提示“Could not open a connection to your authenticationh agent”而失败\n执行： \n    ssh-agent bash\n\n## 在服务器上创建裸版本库：\n\nps：远程仓库通常只是一个裸仓库（bare repository） — 即一个没有当前工作目录的仓库。因为该仓库只是一个合作媒介，所以不需要从硬盘上取出最新版本的快照；仓库里存放的仅仅是 Git 的数据。简单地说，裸仓库就是你工作目录中 .git 子目录内的内容\n\n我们就在 /home/testgit/ 下创建一个叫 sample.git的裸仓库吧：\n\n    mkdir /home/testgit\n    cd /home/testgit\n    git init --bare sample.git\n//这里 git init 是初始化空仓库的意思，而参数 --bare 是代表创建裸仓库，这个参数一定记得带上\n\n当运行完上面的最后一句命令时，会有提示：Initialized empty Git repository in /home/testgit/sample.git/ \n如果你得不到该结果，可能就要回头检查哪一步出问题了\n\n1. 创建web站点目录www\n\n如果你已经拥有lamp环境，那么相信你已经了解该目录，搭建lamp环境详情可以看我的另一篇博客：centos 7搭建lamp平台环境、Centos7 系统下怎么更改apache默认网站目录\n\n现在我的 web 站点目录在 /home/www\n\n2. 在本地克隆服务器上的裸仓库：\n\n前提：本地已安装git \n打开 git bash ，我打算在我的D盘下clone 远程git服务器的版本库\n\n    cd /d\n    git clone git@bwg:/home/testgit/sample.git \n\n在这里如果没有配置公钥的话，会提示输入密码，但是我们可能并不知道密码，那就配置公钥咯： \n\n如果使用git push失败了，极有可能是因为服务器的权限问题，就比如之前我们建的 testgit 文件夹，在这里我的解决方法是：\n\n    chown -R git:git testgit\n\n将testgit文件夹以及下面的子文件夹都赋给了git,这样就保证了推送成功。\n\n第一次push可能会有一些提示，因为裸版本库还什么都没有，你可能需要 git push origin master写全命令，之后就没必要了，直接 git push 就可以了。\n\n到目前为止，我们完成了第一个任务，实现了一个共享平台，既可拉取数据，又可以推送数据。\n\n## 实现自动同步到站点目录（www）\n\n就比如刚才我们往远程仓库推送了index.html文件，虽然提示推送成功，但是我们现在在服务器端还看不到效果，心理总是不爽。又比如我写了个html页面，我想在站点中马上看到，那自动同步就派上用场了。\n\n自动同步功能用到的是 git 的钩子功能，\n\n服务器端：进入裸仓库：/home/testgit/sample.git\n\n    cd /home/testgit/sample.git\n    cd hooks\n这里我们创建post-receive文件\n\n    vim post-receive\n在该文件里输入以下内容\n\n    #!/bin/bash\n    git --work-tree=/home/www checkout -f\n保存退出后，将该文件用户及用户组都设置成git\n\n    chown git:git post-receive\n由于该文件其实就是一个shell文件，我们还应该为其设置可执行权限\n\n    chmod +x post-receive\n现在我们可以在本地计算机中修改index.html文件，或者添加一个新文件，提交到远程仓库，然后到/home/www下面，看看有没有我们刚才提交的文件。\n\n如果你在Git推送的工程中发现推送成功 但是在www目录下并没有自己的代码，这时候你可要注意了：这是由于文件夹的权限的原因造成的！ 假设你的www目录的所属的用户组为root，你可以将你的git用户加入这个组;并给git添加写入权限，或者其他解决方法，反正你要服务器上的git用户有权限进入www文件夹。\n\n## 本地同时提交到vps的git服务器和github\n\n这里有个方便的方法：在本地仓库.git里config文件里加上你的github地址\n\n    [remote \"origin\"]\n\turl = git@bwg:/home/testgit/sample.git\n\turl = git@github.com:xxx/xxxx.git\n\t","slug":"git远程服务器的搭建","published":1,"updated":"2017-06-14T03:14:48.803Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3wffvmi0002vsrjouex4qp3","content":"<p>目标：本地使用git push后可以把本地代码提交到vps的git服务器和github上</p>\n<h2 id=\"在vps设置Git用户并安装Git\"><a href=\"#在vps设置Git用户并安装Git\" class=\"headerlink\" title=\"在vps设置Git用户并安装Git\"></a>在vps设置Git用户并安装Git</h2><p>登陆vps，切换到root用户：</p>\n<pre><code>su -\n</code></pre><p>添加一个叫git的用户来处理仓库：</p>\n<pre><code>groupadd git\nadduser git -g git\n</code></pre><p>然后为这个账户设置密码：</p>\n<pre><code>passwd git\n</code></pre><p>然后就是装git了：<br><br>Centos/Fedora 执行命令：</p>\n<pre><code>yum install git\n</code></pre><p>Ubuntu/Debian 执行命令：</p>\n<pre><code>apt-get install git\n</code></pre><h2 id=\"将SSH密钥添加到访问列表（其实就是个ssh免密码登陆）\"><a href=\"#将SSH密钥添加到访问列表（其实就是个ssh免密码登陆）\" class=\"headerlink\" title=\"将SSH密钥添加到访问列表（其实就是个ssh免密码登陆）\"></a>将SSH密钥添加到访问列表（其实就是个ssh免密码登陆）</h2><p>下面是在vps上进行操作：<br><br>切换到git账户：</p>\n<pre><code>su git\n</code></pre><p>将刚才产生的 id_rsa.pub 文件上传到git用户的home目录下（/home/git/）。<br><br>然后告诉SSH守护进程去接受哪些ssh密钥：</p>\n<pre><code>mkdir ~/.ssh &amp;&amp; touch ~/.ssh/authorized_keys\n</code></pre><p>下面是<code>windows</code>上的操作：</p>\n<blockquote>\n<p>如果你的vps ssh端口号不是22可以在本地.ssh文件夹下配置个config文件（没有新建）</p>\n</blockquote>\n<pre><code>host bwg\nhostname xx.xx.xx.xx\nport xxxx\n</code></pre><p>打开git bash，执行下面的命令，将产生的公钥内容拷贝到vps上的authorized_keys (注意替换命令中的用户名和ip) ：</p>\n<pre><code>cat .ssh/id_rsa.pub | ssh  git@bwg &quot;cat &gt;&gt; ~/.ssh/authorized_keys&quot;\n</code></pre><p>然后看看能不能免密码登陆：</p>\n<pre><code>ssh  git@bwg\n</code></pre><p>第一次登陆的时候会让你输入密码，以后再登陆就不需要输入密码了。</p>\n<p>=====================================</p>\n<p>如果每次登陆都需要密码，则按照如下方法处理：<br><br>1.进行ssh登录时，出现：”Agent admitted failure to sign using the key“ .<br><br>   执行： </p>\n<pre><code>$ssh-add\n</code></pre><p>   强行将私钥 加进来。<br><br>2.如果无任何错误提示，可以输密码登录，但就是不能无密码登录，在被连接的主机上（如A向B发起ssh连接，则在B上）执行以下几步：</p>\n<pre><code>$chmod o-w ~/&lt;br&gt;\n$chmod 700 ~/.ssh&lt;br&gt;\n$chmod 600 ~/.ssh/authorized_keys&lt;br&gt;\n</code></pre><p>3.如果执行了第2步，还是不能无密码登录，再试试下面几个</p>\n<pre><code>$ps -Af | grep agent&lt;br&gt;\n</code></pre><p>检查ssh代理是否开启，如果有开启的话，kill掉该代理，然后执行下面，重新打开一个ssh代理，如果没有开启，直接执行下面：</p>\n<pre><code>$ssh-agent\n</code></pre><p>还是不行的话，执行下面，重启一下ssh服务</p>\n<pre><code>$sudo service sshd restart\n</code></pre><p>4.执行ssh-add时提示“Could not open a connection to your authenticationh agent”而失败<br>执行：<br>    ssh-agent bash</p>\n<h2 id=\"在服务器上创建裸版本库：\"><a href=\"#在服务器上创建裸版本库：\" class=\"headerlink\" title=\"在服务器上创建裸版本库：\"></a>在服务器上创建裸版本库：</h2><p>ps：远程仓库通常只是一个裸仓库（bare repository） — 即一个没有当前工作目录的仓库。因为该仓库只是一个合作媒介，所以不需要从硬盘上取出最新版本的快照；仓库里存放的仅仅是 Git 的数据。简单地说，裸仓库就是你工作目录中 .git 子目录内的内容</p>\n<p>我们就在 /home/testgit/ 下创建一个叫 sample.git的裸仓库吧：</p>\n<pre><code>mkdir /home/testgit\ncd /home/testgit\ngit init --bare sample.git\n</code></pre><p>//这里 git init 是初始化空仓库的意思，而参数 –bare 是代表创建裸仓库，这个参数一定记得带上</p>\n<p>当运行完上面的最后一句命令时，会有提示：Initialized empty Git repository in /home/testgit/sample.git/<br>如果你得不到该结果，可能就要回头检查哪一步出问题了</p>\n<ol>\n<li>创建web站点目录www</li>\n</ol>\n<p>如果你已经拥有lamp环境，那么相信你已经了解该目录，搭建lamp环境详情可以看我的另一篇博客：centos 7搭建lamp平台环境、Centos7 系统下怎么更改apache默认网站目录</p>\n<p>现在我的 web 站点目录在 /home/www</p>\n<ol>\n<li>在本地克隆服务器上的裸仓库：</li>\n</ol>\n<p>前提：本地已安装git<br>打开 git bash ，我打算在我的D盘下clone 远程git服务器的版本库</p>\n<pre><code>cd /d\ngit clone git@bwg:/home/testgit/sample.git \n</code></pre><p>在这里如果没有配置公钥的话，会提示输入密码，但是我们可能并不知道密码，那就配置公钥咯： </p>\n<p>如果使用git push失败了，极有可能是因为服务器的权限问题，就比如之前我们建的 testgit 文件夹，在这里我的解决方法是：</p>\n<pre><code>chown -R git:git testgit\n</code></pre><p>将testgit文件夹以及下面的子文件夹都赋给了git,这样就保证了推送成功。</p>\n<p>第一次push可能会有一些提示，因为裸版本库还什么都没有，你可能需要 git push origin master写全命令，之后就没必要了，直接 git push 就可以了。</p>\n<p>到目前为止，我们完成了第一个任务，实现了一个共享平台，既可拉取数据，又可以推送数据。</p>\n<h2 id=\"实现自动同步到站点目录（www）\"><a href=\"#实现自动同步到站点目录（www）\" class=\"headerlink\" title=\"实现自动同步到站点目录（www）\"></a>实现自动同步到站点目录（www）</h2><p>就比如刚才我们往远程仓库推送了index.html文件，虽然提示推送成功，但是我们现在在服务器端还看不到效果，心理总是不爽。又比如我写了个html页面，我想在站点中马上看到，那自动同步就派上用场了。</p>\n<p>自动同步功能用到的是 git 的钩子功能，</p>\n<p>服务器端：进入裸仓库：/home/testgit/sample.git</p>\n<pre><code>cd /home/testgit/sample.git\ncd hooks\n</code></pre><p>这里我们创建post-receive文件</p>\n<pre><code>vim post-receive\n</code></pre><p>在该文件里输入以下内容</p>\n<pre><code>#!/bin/bash\ngit --work-tree=/home/www checkout -f\n</code></pre><p>保存退出后，将该文件用户及用户组都设置成git</p>\n<pre><code>chown git:git post-receive\n</code></pre><p>由于该文件其实就是一个shell文件，我们还应该为其设置可执行权限</p>\n<pre><code>chmod +x post-receive\n</code></pre><p>现在我们可以在本地计算机中修改index.html文件，或者添加一个新文件，提交到远程仓库，然后到/home/www下面，看看有没有我们刚才提交的文件。</p>\n<p>如果你在Git推送的工程中发现推送成功 但是在www目录下并没有自己的代码，这时候你可要注意了：这是由于文件夹的权限的原因造成的！ 假设你的www目录的所属的用户组为root，你可以将你的git用户加入这个组;并给git添加写入权限，或者其他解决方法，反正你要服务器上的git用户有权限进入www文件夹。</p>\n<h2 id=\"本地同时提交到vps的git服务器和github\"><a href=\"#本地同时提交到vps的git服务器和github\" class=\"headerlink\" title=\"本地同时提交到vps的git服务器和github\"></a>本地同时提交到vps的git服务器和github</h2><p>这里有个方便的方法：在本地仓库.git里config文件里加上你的github地址</p>\n<pre><code>[remote &quot;origin&quot;]\nurl = git@bwg:/home/testgit/sample.git\nurl = git@github.com:xxx/xxxx.git\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<p>目标：本地使用git push后可以把本地代码提交到vps的git服务器和github上</p>\n<h2 id=\"在vps设置Git用户并安装Git\"><a href=\"#在vps设置Git用户并安装Git\" class=\"headerlink\" title=\"在vps设置Git用户并安装Git\"></a>在vps设置Git用户并安装Git</h2><p>登陆vps，切换到root用户：</p>\n<pre><code>su -\n</code></pre><p>添加一个叫git的用户来处理仓库：</p>\n<pre><code>groupadd git\nadduser git -g git\n</code></pre><p>然后为这个账户设置密码：</p>\n<pre><code>passwd git\n</code></pre><p>然后就是装git了：<br><br>Centos/Fedora 执行命令：</p>\n<pre><code>yum install git\n</code></pre><p>Ubuntu/Debian 执行命令：</p>\n<pre><code>apt-get install git\n</code></pre><h2 id=\"将SSH密钥添加到访问列表（其实就是个ssh免密码登陆）\"><a href=\"#将SSH密钥添加到访问列表（其实就是个ssh免密码登陆）\" class=\"headerlink\" title=\"将SSH密钥添加到访问列表（其实就是个ssh免密码登陆）\"></a>将SSH密钥添加到访问列表（其实就是个ssh免密码登陆）</h2><p>下面是在vps上进行操作：<br><br>切换到git账户：</p>\n<pre><code>su git\n</code></pre><p>将刚才产生的 id_rsa.pub 文件上传到git用户的home目录下（/home/git/）。<br><br>然后告诉SSH守护进程去接受哪些ssh密钥：</p>\n<pre><code>mkdir ~/.ssh &amp;&amp; touch ~/.ssh/authorized_keys\n</code></pre><p>下面是<code>windows</code>上的操作：</p>\n<blockquote>\n<p>如果你的vps ssh端口号不是22可以在本地.ssh文件夹下配置个config文件（没有新建）</p>\n</blockquote>\n<pre><code>host bwg\nhostname xx.xx.xx.xx\nport xxxx\n</code></pre><p>打开git bash，执行下面的命令，将产生的公钥内容拷贝到vps上的authorized_keys (注意替换命令中的用户名和ip) ：</p>\n<pre><code>cat .ssh/id_rsa.pub | ssh  git@bwg &quot;cat &gt;&gt; ~/.ssh/authorized_keys&quot;\n</code></pre><p>然后看看能不能免密码登陆：</p>\n<pre><code>ssh  git@bwg\n</code></pre><p>第一次登陆的时候会让你输入密码，以后再登陆就不需要输入密码了。</p>\n<p>=====================================</p>\n<p>如果每次登陆都需要密码，则按照如下方法处理：<br><br>1.进行ssh登录时，出现：”Agent admitted failure to sign using the key“ .<br><br>   执行： </p>\n<pre><code>$ssh-add\n</code></pre><p>   强行将私钥 加进来。<br><br>2.如果无任何错误提示，可以输密码登录，但就是不能无密码登录，在被连接的主机上（如A向B发起ssh连接，则在B上）执行以下几步：</p>\n<pre><code>$chmod o-w ~/&lt;br&gt;\n$chmod 700 ~/.ssh&lt;br&gt;\n$chmod 600 ~/.ssh/authorized_keys&lt;br&gt;\n</code></pre><p>3.如果执行了第2步，还是不能无密码登录，再试试下面几个</p>\n<pre><code>$ps -Af | grep agent&lt;br&gt;\n</code></pre><p>检查ssh代理是否开启，如果有开启的话，kill掉该代理，然后执行下面，重新打开一个ssh代理，如果没有开启，直接执行下面：</p>\n<pre><code>$ssh-agent\n</code></pre><p>还是不行的话，执行下面，重启一下ssh服务</p>\n<pre><code>$sudo service sshd restart\n</code></pre><p>4.执行ssh-add时提示“Could not open a connection to your authenticationh agent”而失败<br>执行：<br>    ssh-agent bash</p>\n<h2 id=\"在服务器上创建裸版本库：\"><a href=\"#在服务器上创建裸版本库：\" class=\"headerlink\" title=\"在服务器上创建裸版本库：\"></a>在服务器上创建裸版本库：</h2><p>ps：远程仓库通常只是一个裸仓库（bare repository） — 即一个没有当前工作目录的仓库。因为该仓库只是一个合作媒介，所以不需要从硬盘上取出最新版本的快照；仓库里存放的仅仅是 Git 的数据。简单地说，裸仓库就是你工作目录中 .git 子目录内的内容</p>\n<p>我们就在 /home/testgit/ 下创建一个叫 sample.git的裸仓库吧：</p>\n<pre><code>mkdir /home/testgit\ncd /home/testgit\ngit init --bare sample.git\n</code></pre><p>//这里 git init 是初始化空仓库的意思，而参数 –bare 是代表创建裸仓库，这个参数一定记得带上</p>\n<p>当运行完上面的最后一句命令时，会有提示：Initialized empty Git repository in /home/testgit/sample.git/<br>如果你得不到该结果，可能就要回头检查哪一步出问题了</p>\n<ol>\n<li>创建web站点目录www</li>\n</ol>\n<p>如果你已经拥有lamp环境，那么相信你已经了解该目录，搭建lamp环境详情可以看我的另一篇博客：centos 7搭建lamp平台环境、Centos7 系统下怎么更改apache默认网站目录</p>\n<p>现在我的 web 站点目录在 /home/www</p>\n<ol>\n<li>在本地克隆服务器上的裸仓库：</li>\n</ol>\n<p>前提：本地已安装git<br>打开 git bash ，我打算在我的D盘下clone 远程git服务器的版本库</p>\n<pre><code>cd /d\ngit clone git@bwg:/home/testgit/sample.git \n</code></pre><p>在这里如果没有配置公钥的话，会提示输入密码，但是我们可能并不知道密码，那就配置公钥咯： </p>\n<p>如果使用git push失败了，极有可能是因为服务器的权限问题，就比如之前我们建的 testgit 文件夹，在这里我的解决方法是：</p>\n<pre><code>chown -R git:git testgit\n</code></pre><p>将testgit文件夹以及下面的子文件夹都赋给了git,这样就保证了推送成功。</p>\n<p>第一次push可能会有一些提示，因为裸版本库还什么都没有，你可能需要 git push origin master写全命令，之后就没必要了，直接 git push 就可以了。</p>\n<p>到目前为止，我们完成了第一个任务，实现了一个共享平台，既可拉取数据，又可以推送数据。</p>\n<h2 id=\"实现自动同步到站点目录（www）\"><a href=\"#实现自动同步到站点目录（www）\" class=\"headerlink\" title=\"实现自动同步到站点目录（www）\"></a>实现自动同步到站点目录（www）</h2><p>就比如刚才我们往远程仓库推送了index.html文件，虽然提示推送成功，但是我们现在在服务器端还看不到效果，心理总是不爽。又比如我写了个html页面，我想在站点中马上看到，那自动同步就派上用场了。</p>\n<p>自动同步功能用到的是 git 的钩子功能，</p>\n<p>服务器端：进入裸仓库：/home/testgit/sample.git</p>\n<pre><code>cd /home/testgit/sample.git\ncd hooks\n</code></pre><p>这里我们创建post-receive文件</p>\n<pre><code>vim post-receive\n</code></pre><p>在该文件里输入以下内容</p>\n<pre><code>#!/bin/bash\ngit --work-tree=/home/www checkout -f\n</code></pre><p>保存退出后，将该文件用户及用户组都设置成git</p>\n<pre><code>chown git:git post-receive\n</code></pre><p>由于该文件其实就是一个shell文件，我们还应该为其设置可执行权限</p>\n<pre><code>chmod +x post-receive\n</code></pre><p>现在我们可以在本地计算机中修改index.html文件，或者添加一个新文件，提交到远程仓库，然后到/home/www下面，看看有没有我们刚才提交的文件。</p>\n<p>如果你在Git推送的工程中发现推送成功 但是在www目录下并没有自己的代码，这时候你可要注意了：这是由于文件夹的权限的原因造成的！ 假设你的www目录的所属的用户组为root，你可以将你的git用户加入这个组;并给git添加写入权限，或者其他解决方法，反正你要服务器上的git用户有权限进入www文件夹。</p>\n<h2 id=\"本地同时提交到vps的git服务器和github\"><a href=\"#本地同时提交到vps的git服务器和github\" class=\"headerlink\" title=\"本地同时提交到vps的git服务器和github\"></a>本地同时提交到vps的git服务器和github</h2><p>这里有个方便的方法：在本地仓库.git里config文件里加上你的github地址</p>\n<pre><code>[remote &quot;origin&quot;]\nurl = git@bwg:/home/testgit/sample.git\nurl = git@github.com:xxx/xxxx.git\n</code></pre>"},{"title":"Hello World","date":"2017-05-18T02:26:26.000Z","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\ndate: 2017-05-18 10:26:26\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"updated":"2017-06-13T01:11:30.829Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3wffvmr0004vsrjgs22o5ma","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n"},{"title":"hexo博客搭好啦","date":"2017-05-20T01:40:24.000Z","_content":"折腾了一上午，终于搭好了自己的博客啦，好开心，好兴奋，今天520，我要去陪女票啦，美好的一天，嗯木啊","source":"_posts/hexo博客搭好啦.md","raw":"---\ntitle: hexo博客搭好啦\ndate: 2017-05-20 09:40:24\ntags: 随笔\n---\n折腾了一上午，终于搭好了自己的博客啦，好开心，好兴奋，今天520，我要去陪女票啦，美好的一天，嗯木啊","slug":"hexo博客搭好啦","published":1,"updated":"2017-06-13T01:11:30.829Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3wffvmz0005vsrjih5k34an","content":"<p>折腾了一上午，终于搭好了自己的博客啦，好开心，好兴奋，今天520，我要去陪女票啦，美好的一天，嗯木啊</p>\n","site":{"data":{}},"excerpt":"","more":"<p>折腾了一上午，终于搭好了自己的博客啦，好开心，好兴奋，今天520，我要去陪女票啦，美好的一天，嗯木啊</p>\n"},{"title":"markdown语法教程","date":"2017-05-25T09:43:03.000Z","_content":"[完整版Markdown 语法手册（完整版）](http://blog.leanote.com/post/freewalk/Markdown-%E8%AF%AD%E6%B3%95%E6%89%8B%E5%86%8C#title)\n\n目录\n[TOC]\n\n## 目录\n\t如上[TOC]所示\n\t\n## 斜体和粗体\n\n*我是斜体* 或 _斜体_ \n\n\t*斜体*  _斜体_\n\t\t \n**我是粗体**\n\n    **粗体**\n\t\t \n~~删除线~~\n\n\t~~删除线~~\n\t\t \n## 链接\n\n[点我](https://saihy2016.github.io/)\n\n​\t[点我]（https://saihy2016.github.io/）\n\n![花儿](C:\\Users\\Administrator\\Desktop\\my\\blogMD\\hua.jpg '美丽的花儿' )\n\t![图片]（C:\\Users\\Administrator\\Desktop\\my\\blogMD\\hua.jpg \"美丽花儿\"）\n\t\n## 锚点\n 我要调到\n\n## 列表\n## 引用\n## 插入图像\n## 内容目录\n## 注脚\n## LaTeX公式\n## 流程图\n## 表格","source":"_posts/markdown语法教程.md","raw":"---\ntitle: markdown语法教程\ndate: 2017-05-025 17:43:03\ntags:\n---\n[完整版Markdown 语法手册（完整版）](http://blog.leanote.com/post/freewalk/Markdown-%E8%AF%AD%E6%B3%95%E6%89%8B%E5%86%8C#title)\n\n目录\n[TOC]\n\n## 目录\n\t如上[TOC]所示\n\t\n## 斜体和粗体\n\n*我是斜体* 或 _斜体_ \n\n\t*斜体*  _斜体_\n\t\t \n**我是粗体**\n\n    **粗体**\n\t\t \n~~删除线~~\n\n\t~~删除线~~\n\t\t \n## 链接\n\n[点我](https://saihy2016.github.io/)\n\n​\t[点我]（https://saihy2016.github.io/）\n\n![花儿](C:\\Users\\Administrator\\Desktop\\my\\blogMD\\hua.jpg '美丽的花儿' )\n\t![图片]（C:\\Users\\Administrator\\Desktop\\my\\blogMD\\hua.jpg \"美丽花儿\"）\n\t\n## 锚点\n 我要调到\n\n## 列表\n## 引用\n## 插入图像\n## 内容目录\n## 注脚\n## LaTeX公式\n## 流程图\n## 表格","slug":"markdown语法教程","published":1,"updated":"2017-06-13T01:11:30.829Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3wffvn20006vsrjpxkbd2r3","content":"<p><a href=\"http://blog.leanote.com/post/freewalk/Markdown-%E8%AF%AD%E6%B3%95%E6%89%8B%E5%86%8C#title\" target=\"_blank\" rel=\"external\">完整版Markdown 语法手册（完整版）</a></p>\n<p>目录<br>[TOC]</p>\n<h2 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h2><pre><code>如上[TOC]所示\n</code></pre><h2 id=\"斜体和粗体\"><a href=\"#斜体和粗体\" class=\"headerlink\" title=\"斜体和粗体\"></a>斜体和粗体</h2><p><em>我是斜体</em> 或 <em>斜体</em> </p>\n<pre><code>*斜体*  _斜体_\n</code></pre><p><strong>我是粗体</strong></p>\n<pre><code>**粗体**\n</code></pre><p><del>删除线</del></p>\n<pre><code>~~删除线~~\n</code></pre><h2 id=\"链接\"><a href=\"#链接\" class=\"headerlink\" title=\"链接\"></a>链接</h2><p><a href=\"https://saihy2016.github.io/\" target=\"_blank\" rel=\"external\">点我</a></p>\n<p>​    [点我]（<a href=\"https://saihy2016.github.io/）\" target=\"_blank\" rel=\"external\">https://saihy2016.github.io/）</a></p>\n<p><img src=\"/2017/05/25/markdown语法教程/Users\\Administrator\\Desktop\\my\\blogMD\\hua.jpg\" alt=\"花儿\" title=\"美丽的花儿\"><br>    ![图片]（C:\\Users\\Administrator\\Desktop\\my\\blogMD\\hua.jpg “美丽花儿”）</p>\n<h2 id=\"锚点\"><a href=\"#锚点\" class=\"headerlink\" title=\"锚点\"></a>锚点</h2><p> 我要调到</p>\n<h2 id=\"列表\"><a href=\"#列表\" class=\"headerlink\" title=\"列表\"></a>列表</h2><h2 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h2><h2 id=\"插入图像\"><a href=\"#插入图像\" class=\"headerlink\" title=\"插入图像\"></a>插入图像</h2><h2 id=\"内容目录\"><a href=\"#内容目录\" class=\"headerlink\" title=\"内容目录\"></a>内容目录</h2><h2 id=\"注脚\"><a href=\"#注脚\" class=\"headerlink\" title=\"注脚\"></a>注脚</h2><h2 id=\"LaTeX公式\"><a href=\"#LaTeX公式\" class=\"headerlink\" title=\"LaTeX公式\"></a>LaTeX公式</h2><h2 id=\"流程图\"><a href=\"#流程图\" class=\"headerlink\" title=\"流程图\"></a>流程图</h2><h2 id=\"表格\"><a href=\"#表格\" class=\"headerlink\" title=\"表格\"></a>表格</h2>","site":{"data":{}},"excerpt":"","more":"<p><a href=\"http://blog.leanote.com/post/freewalk/Markdown-%E8%AF%AD%E6%B3%95%E6%89%8B%E5%86%8C#title\" target=\"_blank\" rel=\"external\">完整版Markdown 语法手册（完整版）</a></p>\n<p>目录<br>[TOC]</p>\n<h2 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h2><pre><code>如上[TOC]所示\n</code></pre><h2 id=\"斜体和粗体\"><a href=\"#斜体和粗体\" class=\"headerlink\" title=\"斜体和粗体\"></a>斜体和粗体</h2><p><em>我是斜体</em> 或 <em>斜体</em> </p>\n<pre><code>*斜体*  _斜体_\n</code></pre><p><strong>我是粗体</strong></p>\n<pre><code>**粗体**\n</code></pre><p><del>删除线</del></p>\n<pre><code>~~删除线~~\n</code></pre><h2 id=\"链接\"><a href=\"#链接\" class=\"headerlink\" title=\"链接\"></a>链接</h2><p><a href=\"https://saihy2016.github.io/\" target=\"_blank\" rel=\"external\">点我</a></p>\n<p>​    [点我]（<a href=\"https://saihy2016.github.io/）\" target=\"_blank\" rel=\"external\">https://saihy2016.github.io/）</a></p>\n<p><img src=\"/2017/05/25/markdown语法教程/Users\\Administrator\\Desktop\\my\\blogMD\\hua.jpg\" alt=\"花儿\" title=\"美丽的花儿\"><br>    ![图片]（C:\\Users\\Administrator\\Desktop\\my\\blogMD\\hua.jpg “美丽花儿”）</p>\n<h2 id=\"锚点\"><a href=\"#锚点\" class=\"headerlink\" title=\"锚点\"></a>锚点</h2><p> 我要调到</p>\n<h2 id=\"列表\"><a href=\"#列表\" class=\"headerlink\" title=\"列表\"></a>列表</h2><h2 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h2><h2 id=\"插入图像\"><a href=\"#插入图像\" class=\"headerlink\" title=\"插入图像\"></a>插入图像</h2><h2 id=\"内容目录\"><a href=\"#内容目录\" class=\"headerlink\" title=\"内容目录\"></a>内容目录</h2><h2 id=\"注脚\"><a href=\"#注脚\" class=\"headerlink\" title=\"注脚\"></a>注脚</h2><h2 id=\"LaTeX公式\"><a href=\"#LaTeX公式\" class=\"headerlink\" title=\"LaTeX公式\"></a>LaTeX公式</h2><h2 id=\"流程图\"><a href=\"#流程图\" class=\"headerlink\" title=\"流程图\"></a>流程图</h2><h2 id=\"表格\"><a href=\"#表格\" class=\"headerlink\" title=\"表格\"></a>表格</h2>"},{"title":"meta一些设置（未完）","date":"2017-06-07T02:26:26.000Z","_content":"META标签分两大部分：HTTP标题信息(HTTP-EQUIV)和页面描述信息(NAME)。\n\n## name 属性\n\n ```html\n  1、<meta name=\"Generator\" contect=\"\">用以说明生成工具（如Microsoft FrontPage 4.0）等；\n\n  2、<meta name=\"KEYWords\" contect=\"\">向搜索引擎说明你的网页的关键词；\n\n  3、<meta name=\"DEscription\" contect=\"\">告诉搜索引擎你的站点的主要内容；\n\n  4、<meta name=\"Author\" contect=\"你的姓名\">告诉搜索引擎你的站点的制作的作者；\n\n  5、<meta name=\"Robots\" contect= \"all|none|index|noindex|follow|nofollow\">\n\n  　 其中的属性说明如下：\n  　 设定为all：文件将被检索，且页面上的链接可以被查询；\n    设定为none：文件将不被检索，且页面上的链接不可以被查询；\n    设定为index：文件将被检索；\n    设定为follow：页面上的链接可以被查询；\n    设定为noindex：文件将不被检索，但页面上的链接可以被查询；\n    设定为nofollow：文件将不被检索，页面上的链接可以被查询。\n```\n\n## http-equiv属性\n\n```\n1、<meta http-equiv=\"Content-Type\" contect=\"text/html\";charset=gb_2312-80\">和 <meta http-equiv=\"Content-Language\" contect=\"zh-CN\">用以说明主页制作所使用的文字以及语言；又如英文是ISO-8859-1字符集，还有BIG5、utf-8、shift-Jis、Euc、Koi8-2等字符集；\n2、<meta http-equiv=\"Refresh\" contect=\"n;url=http://yourlink\">定时让网页在指定的时间n内，跳转到页面http://yourlink；\n3、<meta http-equiv=\"Expires\" contect=\"Mon,12 May 2001 00:20:00 GMT\">可以用于设定网页的到期时间，一旦过期则必须到服务器上重新调用。需要注意的是必须使用GMT时间格式；\n4、<meta http-equiv=\"Pragma\" contect=\"no-cache\">是用于设定禁止浏览器从本地机的缓存中调阅页面内容，设定后一旦离开网页就无法从Cache中再调出；\n5、<meta http-equiv=\"set-cookie\" contect=\"Mon,12 May 2001 00:20:00 GMT\">cookie设定，如果网页过期，存盘的cookie将被删除。需要注意的也是必须使用GMT时间格式；\n6、<meta http-equiv=\"Pics-label\" contect=\"\">网页等级评定，在IE的internet选项中有一项内容设置，可以防止浏览一些受限制的网站，而网站的限制级别就是通过meta属性来设置的；\n7、<meta http-equiv=\"windows-Target\" contect=\"_top\">强制页面在当前窗口中以独立页面显示，可以防止自己的网页被别人当作一个frame页调用；\n8、<meta http-equiv=\"Page-Enter\" contect=\"revealTrans(duration=10,transtion= 50)\">和<meta http-equiv=\"Page-Exit\" contect=\"revealTrans(duration=20，transtion=6)\">设定进入和离开页面时的特殊效果，这个功能即FrontPage中的“格式/网页过渡”，不过所加的页面不能够是一个frame页面。\nOpen Graph Protocol\nMeta Property=og标签是什么呢?\nog是一种新的HTTP头部标记，即Open Graph Protocol：\n\nThe Open Graph Protocol enables any web page to become a rich object in a social graph.+ n3 }\n\n即这种协议可以让网页成为一个“富媒体对象”。\n用了Meta Property=og标签，就是你同意了网页内容可以被其他社会化网站引用等，目前这种协议被SNS网站如Fackbook、renren采用。\nSNS已经成为网络上的一大热门应用，优质的内容通过分享在好友间迅速传播。为了提高站外内容的传播效率，2010年F8会议上Facebook公布 了一套开放内容协议(Open Graph Protocol)，任何网页只要遵守该协议，SNS就能从页面上提取最有效的信息并呈现给用户。\n\n  <meta property=”og:type” content=”video”/>\n  <meta property=”og:title” content=”五月天_突然好想你MV现场版”/>\n  <meta property=”og:image” content=”http://g1.ykimg.com/0100641F464A ... 9-76EA-E5E20A1887C4″/>\n  <meta property=”og:url” content=”http://v.youku.com/v_show/id_XMTIyMTY5NzMy.html”/>\n  <meta property=”og:videosrc” content=”http://player.youku.com/player.p ... AutoPlay=true/v.swf”/>\n  <meta property=”og:width” content=”500″ />\n  <meta property=”og:height” content=”416″ />\n  <meta property=”og:type” content=”video”/>\n  <meta property=”og:title” content=”五月天_突然好想你MV现场版_AA”/>\n  <meta property=”og:image” content=”http://g1.ykimg.com/0100641F464A ... EA-E5E20A1887C44444″/>\n  <meta property=”og:url” content=”http://v.youku.com/v_show/id_XMTIyMTY5NzMyyyyyyyyyyyyyyyy.html”/>\n  <meta property=”og:videosrc” content=”http://player.youku.com/player.p ... AutoPlay=true/y.swf”/>\n  <meta property=”og:width” content=”600″ />\n  <meta property=”og:height” content=”716″/>\n\n  <meta http-equiv=\"Content-Language\" content=\"zh-CN\" />    html代码语言采用中文\n  <meta property=\"qc:admins\" content=\"153033120760567656375\" />  QQ登陆声明\n  <meta property=\"wb:webmaster\" content=\"e9da5e10879ed7c9\" />   微博登陆声明\n  <meta name=\"google-site-verification\" content=\"tPkY-Quj85Ni78uIWOIREPO9k5xczDgjch10qsLfVfs\" /> google的网站认证代码，证明该网站的所有者是你\n  ```","source":"_posts/meta的一些设置.md","raw":"---\ntitle: meta一些设置（未完）\ndate: 2017-06-07 10:26:26\ntags: 学习\n---\nMETA标签分两大部分：HTTP标题信息(HTTP-EQUIV)和页面描述信息(NAME)。\n\n## name 属性\n\n ```html\n  1、<meta name=\"Generator\" contect=\"\">用以说明生成工具（如Microsoft FrontPage 4.0）等；\n\n  2、<meta name=\"KEYWords\" contect=\"\">向搜索引擎说明你的网页的关键词；\n\n  3、<meta name=\"DEscription\" contect=\"\">告诉搜索引擎你的站点的主要内容；\n\n  4、<meta name=\"Author\" contect=\"你的姓名\">告诉搜索引擎你的站点的制作的作者；\n\n  5、<meta name=\"Robots\" contect= \"all|none|index|noindex|follow|nofollow\">\n\n  　 其中的属性说明如下：\n  　 设定为all：文件将被检索，且页面上的链接可以被查询；\n    设定为none：文件将不被检索，且页面上的链接不可以被查询；\n    设定为index：文件将被检索；\n    设定为follow：页面上的链接可以被查询；\n    设定为noindex：文件将不被检索，但页面上的链接可以被查询；\n    设定为nofollow：文件将不被检索，页面上的链接可以被查询。\n```\n\n## http-equiv属性\n\n```\n1、<meta http-equiv=\"Content-Type\" contect=\"text/html\";charset=gb_2312-80\">和 <meta http-equiv=\"Content-Language\" contect=\"zh-CN\">用以说明主页制作所使用的文字以及语言；又如英文是ISO-8859-1字符集，还有BIG5、utf-8、shift-Jis、Euc、Koi8-2等字符集；\n2、<meta http-equiv=\"Refresh\" contect=\"n;url=http://yourlink\">定时让网页在指定的时间n内，跳转到页面http://yourlink；\n3、<meta http-equiv=\"Expires\" contect=\"Mon,12 May 2001 00:20:00 GMT\">可以用于设定网页的到期时间，一旦过期则必须到服务器上重新调用。需要注意的是必须使用GMT时间格式；\n4、<meta http-equiv=\"Pragma\" contect=\"no-cache\">是用于设定禁止浏览器从本地机的缓存中调阅页面内容，设定后一旦离开网页就无法从Cache中再调出；\n5、<meta http-equiv=\"set-cookie\" contect=\"Mon,12 May 2001 00:20:00 GMT\">cookie设定，如果网页过期，存盘的cookie将被删除。需要注意的也是必须使用GMT时间格式；\n6、<meta http-equiv=\"Pics-label\" contect=\"\">网页等级评定，在IE的internet选项中有一项内容设置，可以防止浏览一些受限制的网站，而网站的限制级别就是通过meta属性来设置的；\n7、<meta http-equiv=\"windows-Target\" contect=\"_top\">强制页面在当前窗口中以独立页面显示，可以防止自己的网页被别人当作一个frame页调用；\n8、<meta http-equiv=\"Page-Enter\" contect=\"revealTrans(duration=10,transtion= 50)\">和<meta http-equiv=\"Page-Exit\" contect=\"revealTrans(duration=20，transtion=6)\">设定进入和离开页面时的特殊效果，这个功能即FrontPage中的“格式/网页过渡”，不过所加的页面不能够是一个frame页面。\nOpen Graph Protocol\nMeta Property=og标签是什么呢?\nog是一种新的HTTP头部标记，即Open Graph Protocol：\n\nThe Open Graph Protocol enables any web page to become a rich object in a social graph.+ n3 }\n\n即这种协议可以让网页成为一个“富媒体对象”。\n用了Meta Property=og标签，就是你同意了网页内容可以被其他社会化网站引用等，目前这种协议被SNS网站如Fackbook、renren采用。\nSNS已经成为网络上的一大热门应用，优质的内容通过分享在好友间迅速传播。为了提高站外内容的传播效率，2010年F8会议上Facebook公布 了一套开放内容协议(Open Graph Protocol)，任何网页只要遵守该协议，SNS就能从页面上提取最有效的信息并呈现给用户。\n\n  <meta property=”og:type” content=”video”/>\n  <meta property=”og:title” content=”五月天_突然好想你MV现场版”/>\n  <meta property=”og:image” content=”http://g1.ykimg.com/0100641F464A ... 9-76EA-E5E20A1887C4″/>\n  <meta property=”og:url” content=”http://v.youku.com/v_show/id_XMTIyMTY5NzMy.html”/>\n  <meta property=”og:videosrc” content=”http://player.youku.com/player.p ... AutoPlay=true/v.swf”/>\n  <meta property=”og:width” content=”500″ />\n  <meta property=”og:height” content=”416″ />\n  <meta property=”og:type” content=”video”/>\n  <meta property=”og:title” content=”五月天_突然好想你MV现场版_AA”/>\n  <meta property=”og:image” content=”http://g1.ykimg.com/0100641F464A ... EA-E5E20A1887C44444″/>\n  <meta property=”og:url” content=”http://v.youku.com/v_show/id_XMTIyMTY5NzMyyyyyyyyyyyyyyyy.html”/>\n  <meta property=”og:videosrc” content=”http://player.youku.com/player.p ... AutoPlay=true/y.swf”/>\n  <meta property=”og:width” content=”600″ />\n  <meta property=”og:height” content=”716″/>\n\n  <meta http-equiv=\"Content-Language\" content=\"zh-CN\" />    html代码语言采用中文\n  <meta property=\"qc:admins\" content=\"153033120760567656375\" />  QQ登陆声明\n  <meta property=\"wb:webmaster\" content=\"e9da5e10879ed7c9\" />   微博登陆声明\n  <meta name=\"google-site-verification\" content=\"tPkY-Quj85Ni78uIWOIREPO9k5xczDgjch10qsLfVfs\" /> google的网站认证代码，证明该网站的所有者是你\n  ```","slug":"meta的一些设置","published":1,"updated":"2017-06-13T01:11:30.830Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3wffvn50009vsrj6a91iebh","content":"<p>META标签分两大部分：HTTP标题信息(HTTP-EQUIV)和页面描述信息(NAME)。</p>\n<h2 id=\"name-属性\"><a href=\"#name-属性\" class=\"headerlink\" title=\"name 属性\"></a>name 属性</h2> <figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">1、<span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"Generator\"</span> <span class=\"attr\">contect</span>=<span class=\"string\">\"\"</span>&gt;</span>用以说明生成工具（如Microsoft FrontPage 4.0）等；</div><div class=\"line\"></div><div class=\"line\">2、<span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"KEYWords\"</span> <span class=\"attr\">contect</span>=<span class=\"string\">\"\"</span>&gt;</span>向搜索引擎说明你的网页的关键词；</div><div class=\"line\"></div><div class=\"line\">3、<span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"DEscription\"</span> <span class=\"attr\">contect</span>=<span class=\"string\">\"\"</span>&gt;</span>告诉搜索引擎你的站点的主要内容；</div><div class=\"line\"></div><div class=\"line\">4、<span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"Author\"</span> <span class=\"attr\">contect</span>=<span class=\"string\">\"你的姓名\"</span>&gt;</span>告诉搜索引擎你的站点的制作的作者；</div><div class=\"line\"></div><div class=\"line\">5、<span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"Robots\"</span> <span class=\"attr\">contect</span>= <span class=\"string\">\"all|none|index|noindex|follow|nofollow\"</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">　 其中的属性说明如下：</div><div class=\"line\">　 设定为all：文件将被检索，且页面上的链接可以被查询；</div><div class=\"line\">  设定为none：文件将不被检索，且页面上的链接不可以被查询；</div><div class=\"line\">  设定为index：文件将被检索；</div><div class=\"line\">  设定为follow：页面上的链接可以被查询；</div><div class=\"line\">  设定为noindex：文件将不被检索，但页面上的链接可以被查询；</div><div class=\"line\">  设定为nofollow：文件将不被检索，页面上的链接可以被查询。</div></pre></td></tr></table></figure>\n<h2 id=\"http-equiv属性\"><a href=\"#http-equiv属性\" class=\"headerlink\" title=\"http-equiv属性\"></a>http-equiv属性</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div></pre></td><td class=\"code\"><pre><div class=\"line\">1、&lt;meta http-equiv=&quot;Content-Type&quot; contect=&quot;text/html&quot;;charset=gb_2312-80&quot;&gt;和 &lt;meta http-equiv=&quot;Content-Language&quot; contect=&quot;zh-CN&quot;&gt;用以说明主页制作所使用的文字以及语言；又如英文是ISO-8859-1字符集，还有BIG5、utf-8、shift-Jis、Euc、Koi8-2等字符集；</div><div class=\"line\">2、&lt;meta http-equiv=&quot;Refresh&quot; contect=&quot;n;url=http://yourlink&quot;&gt;定时让网页在指定的时间n内，跳转到页面http://yourlink；</div><div class=\"line\">3、&lt;meta http-equiv=&quot;Expires&quot; contect=&quot;Mon,12 May 2001 00:20:00 GMT&quot;&gt;可以用于设定网页的到期时间，一旦过期则必须到服务器上重新调用。需要注意的是必须使用GMT时间格式；</div><div class=\"line\">4、&lt;meta http-equiv=&quot;Pragma&quot; contect=&quot;no-cache&quot;&gt;是用于设定禁止浏览器从本地机的缓存中调阅页面内容，设定后一旦离开网页就无法从Cache中再调出；</div><div class=\"line\">5、&lt;meta http-equiv=&quot;set-cookie&quot; contect=&quot;Mon,12 May 2001 00:20:00 GMT&quot;&gt;cookie设定，如果网页过期，存盘的cookie将被删除。需要注意的也是必须使用GMT时间格式；</div><div class=\"line\">6、&lt;meta http-equiv=&quot;Pics-label&quot; contect=&quot;&quot;&gt;网页等级评定，在IE的internet选项中有一项内容设置，可以防止浏览一些受限制的网站，而网站的限制级别就是通过meta属性来设置的；</div><div class=\"line\">7、&lt;meta http-equiv=&quot;windows-Target&quot; contect=&quot;_top&quot;&gt;强制页面在当前窗口中以独立页面显示，可以防止自己的网页被别人当作一个frame页调用；</div><div class=\"line\">8、&lt;meta http-equiv=&quot;Page-Enter&quot; contect=&quot;revealTrans(duration=10,transtion= 50)&quot;&gt;和&lt;meta http-equiv=&quot;Page-Exit&quot; contect=&quot;revealTrans(duration=20，transtion=6)&quot;&gt;设定进入和离开页面时的特殊效果，这个功能即FrontPage中的“格式/网页过渡”，不过所加的页面不能够是一个frame页面。</div><div class=\"line\">Open Graph Protocol</div><div class=\"line\">Meta Property=og标签是什么呢?</div><div class=\"line\">og是一种新的HTTP头部标记，即Open Graph Protocol：</div><div class=\"line\"></div><div class=\"line\">The Open Graph Protocol enables any web page to become a rich object in a social graph.+ n3 &#125;</div><div class=\"line\"></div><div class=\"line\">即这种协议可以让网页成为一个“富媒体对象”。</div><div class=\"line\">用了Meta Property=og标签，就是你同意了网页内容可以被其他社会化网站引用等，目前这种协议被SNS网站如Fackbook、renren采用。</div><div class=\"line\">SNS已经成为网络上的一大热门应用，优质的内容通过分享在好友间迅速传播。为了提高站外内容的传播效率，2010年F8会议上Facebook公布 了一套开放内容协议(Open Graph Protocol)，任何网页只要遵守该协议，SNS就能从页面上提取最有效的信息并呈现给用户。</div><div class=\"line\"></div><div class=\"line\">  &lt;meta property=”og:type” content=”video”/&gt;</div><div class=\"line\">  &lt;meta property=”og:title” content=”五月天_突然好想你MV现场版”/&gt;</div><div class=\"line\">  &lt;meta property=”og:image” content=”http://g1.ykimg.com/0100641F464A ... 9-76EA-E5E20A1887C4″/&gt;</div><div class=\"line\">  &lt;meta property=”og:url” content=”http://v.youku.com/v_show/id_XMTIyMTY5NzMy.html”/&gt;</div><div class=\"line\">  &lt;meta property=”og:videosrc” content=”http://player.youku.com/player.p ... AutoPlay=true/v.swf”/&gt;</div><div class=\"line\">  &lt;meta property=”og:width” content=”500″ /&gt;</div><div class=\"line\">  &lt;meta property=”og:height” content=”416″ /&gt;</div><div class=\"line\">  &lt;meta property=”og:type” content=”video”/&gt;</div><div class=\"line\">  &lt;meta property=”og:title” content=”五月天_突然好想你MV现场版_AA”/&gt;</div><div class=\"line\">  &lt;meta property=”og:image” content=”http://g1.ykimg.com/0100641F464A ... EA-E5E20A1887C44444″/&gt;</div><div class=\"line\">  &lt;meta property=”og:url” content=”http://v.youku.com/v_show/id_XMTIyMTY5NzMyyyyyyyyyyyyyyyy.html”/&gt;</div><div class=\"line\">  &lt;meta property=”og:videosrc” content=”http://player.youku.com/player.p ... AutoPlay=true/y.swf”/&gt;</div><div class=\"line\">  &lt;meta property=”og:width” content=”600″ /&gt;</div><div class=\"line\">  &lt;meta property=”og:height” content=”716″/&gt;</div><div class=\"line\"></div><div class=\"line\">  &lt;meta http-equiv=&quot;Content-Language&quot; content=&quot;zh-CN&quot; /&gt;    html代码语言采用中文</div><div class=\"line\">  &lt;meta property=&quot;qc:admins&quot; content=&quot;153033120760567656375&quot; /&gt;  QQ登陆声明</div><div class=\"line\">  &lt;meta property=&quot;wb:webmaster&quot; content=&quot;e9da5e10879ed7c9&quot; /&gt;   微博登陆声明</div><div class=\"line\">  &lt;meta name=&quot;google-site-verification&quot; content=&quot;tPkY-Quj85Ni78uIWOIREPO9k5xczDgjch10qsLfVfs&quot; /&gt; google的网站认证代码，证明该网站的所有者是你</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>META标签分两大部分：HTTP标题信息(HTTP-EQUIV)和页面描述信息(NAME)。</p>\n<h2 id=\"name-属性\"><a href=\"#name-属性\" class=\"headerlink\" title=\"name 属性\"></a>name 属性</h2> <figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">1、<span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"Generator\"</span> <span class=\"attr\">contect</span>=<span class=\"string\">\"\"</span>&gt;</span>用以说明生成工具（如Microsoft FrontPage 4.0）等；</div><div class=\"line\"></div><div class=\"line\">2、<span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"KEYWords\"</span> <span class=\"attr\">contect</span>=<span class=\"string\">\"\"</span>&gt;</span>向搜索引擎说明你的网页的关键词；</div><div class=\"line\"></div><div class=\"line\">3、<span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"DEscription\"</span> <span class=\"attr\">contect</span>=<span class=\"string\">\"\"</span>&gt;</span>告诉搜索引擎你的站点的主要内容；</div><div class=\"line\"></div><div class=\"line\">4、<span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"Author\"</span> <span class=\"attr\">contect</span>=<span class=\"string\">\"你的姓名\"</span>&gt;</span>告诉搜索引擎你的站点的制作的作者；</div><div class=\"line\"></div><div class=\"line\">5、<span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"Robots\"</span> <span class=\"attr\">contect</span>= <span class=\"string\">\"all|none|index|noindex|follow|nofollow\"</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">　 其中的属性说明如下：</div><div class=\"line\">　 设定为all：文件将被检索，且页面上的链接可以被查询；</div><div class=\"line\">  设定为none：文件将不被检索，且页面上的链接不可以被查询；</div><div class=\"line\">  设定为index：文件将被检索；</div><div class=\"line\">  设定为follow：页面上的链接可以被查询；</div><div class=\"line\">  设定为noindex：文件将不被检索，但页面上的链接可以被查询；</div><div class=\"line\">  设定为nofollow：文件将不被检索，页面上的链接可以被查询。</div></pre></td></tr></table></figure>\n<h2 id=\"http-equiv属性\"><a href=\"#http-equiv属性\" class=\"headerlink\" title=\"http-equiv属性\"></a>http-equiv属性</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div></pre></td><td class=\"code\"><pre><div class=\"line\">1、&lt;meta http-equiv=&quot;Content-Type&quot; contect=&quot;text/html&quot;;charset=gb_2312-80&quot;&gt;和 &lt;meta http-equiv=&quot;Content-Language&quot; contect=&quot;zh-CN&quot;&gt;用以说明主页制作所使用的文字以及语言；又如英文是ISO-8859-1字符集，还有BIG5、utf-8、shift-Jis、Euc、Koi8-2等字符集；</div><div class=\"line\">2、&lt;meta http-equiv=&quot;Refresh&quot; contect=&quot;n;url=http://yourlink&quot;&gt;定时让网页在指定的时间n内，跳转到页面http://yourlink；</div><div class=\"line\">3、&lt;meta http-equiv=&quot;Expires&quot; contect=&quot;Mon,12 May 2001 00:20:00 GMT&quot;&gt;可以用于设定网页的到期时间，一旦过期则必须到服务器上重新调用。需要注意的是必须使用GMT时间格式；</div><div class=\"line\">4、&lt;meta http-equiv=&quot;Pragma&quot; contect=&quot;no-cache&quot;&gt;是用于设定禁止浏览器从本地机的缓存中调阅页面内容，设定后一旦离开网页就无法从Cache中再调出；</div><div class=\"line\">5、&lt;meta http-equiv=&quot;set-cookie&quot; contect=&quot;Mon,12 May 2001 00:20:00 GMT&quot;&gt;cookie设定，如果网页过期，存盘的cookie将被删除。需要注意的也是必须使用GMT时间格式；</div><div class=\"line\">6、&lt;meta http-equiv=&quot;Pics-label&quot; contect=&quot;&quot;&gt;网页等级评定，在IE的internet选项中有一项内容设置，可以防止浏览一些受限制的网站，而网站的限制级别就是通过meta属性来设置的；</div><div class=\"line\">7、&lt;meta http-equiv=&quot;windows-Target&quot; contect=&quot;_top&quot;&gt;强制页面在当前窗口中以独立页面显示，可以防止自己的网页被别人当作一个frame页调用；</div><div class=\"line\">8、&lt;meta http-equiv=&quot;Page-Enter&quot; contect=&quot;revealTrans(duration=10,transtion= 50)&quot;&gt;和&lt;meta http-equiv=&quot;Page-Exit&quot; contect=&quot;revealTrans(duration=20，transtion=6)&quot;&gt;设定进入和离开页面时的特殊效果，这个功能即FrontPage中的“格式/网页过渡”，不过所加的页面不能够是一个frame页面。</div><div class=\"line\">Open Graph Protocol</div><div class=\"line\">Meta Property=og标签是什么呢?</div><div class=\"line\">og是一种新的HTTP头部标记，即Open Graph Protocol：</div><div class=\"line\"></div><div class=\"line\">The Open Graph Protocol enables any web page to become a rich object in a social graph.+ n3 &#125;</div><div class=\"line\"></div><div class=\"line\">即这种协议可以让网页成为一个“富媒体对象”。</div><div class=\"line\">用了Meta Property=og标签，就是你同意了网页内容可以被其他社会化网站引用等，目前这种协议被SNS网站如Fackbook、renren采用。</div><div class=\"line\">SNS已经成为网络上的一大热门应用，优质的内容通过分享在好友间迅速传播。为了提高站外内容的传播效率，2010年F8会议上Facebook公布 了一套开放内容协议(Open Graph Protocol)，任何网页只要遵守该协议，SNS就能从页面上提取最有效的信息并呈现给用户。</div><div class=\"line\"></div><div class=\"line\">  &lt;meta property=”og:type” content=”video”/&gt;</div><div class=\"line\">  &lt;meta property=”og:title” content=”五月天_突然好想你MV现场版”/&gt;</div><div class=\"line\">  &lt;meta property=”og:image” content=”http://g1.ykimg.com/0100641F464A ... 9-76EA-E5E20A1887C4″/&gt;</div><div class=\"line\">  &lt;meta property=”og:url” content=”http://v.youku.com/v_show/id_XMTIyMTY5NzMy.html”/&gt;</div><div class=\"line\">  &lt;meta property=”og:videosrc” content=”http://player.youku.com/player.p ... AutoPlay=true/v.swf”/&gt;</div><div class=\"line\">  &lt;meta property=”og:width” content=”500″ /&gt;</div><div class=\"line\">  &lt;meta property=”og:height” content=”416″ /&gt;</div><div class=\"line\">  &lt;meta property=”og:type” content=”video”/&gt;</div><div class=\"line\">  &lt;meta property=”og:title” content=”五月天_突然好想你MV现场版_AA”/&gt;</div><div class=\"line\">  &lt;meta property=”og:image” content=”http://g1.ykimg.com/0100641F464A ... EA-E5E20A1887C44444″/&gt;</div><div class=\"line\">  &lt;meta property=”og:url” content=”http://v.youku.com/v_show/id_XMTIyMTY5NzMyyyyyyyyyyyyyyyy.html”/&gt;</div><div class=\"line\">  &lt;meta property=”og:videosrc” content=”http://player.youku.com/player.p ... AutoPlay=true/y.swf”/&gt;</div><div class=\"line\">  &lt;meta property=”og:width” content=”600″ /&gt;</div><div class=\"line\">  &lt;meta property=”og:height” content=”716″/&gt;</div><div class=\"line\"></div><div class=\"line\">  &lt;meta http-equiv=&quot;Content-Language&quot; content=&quot;zh-CN&quot; /&gt;    html代码语言采用中文</div><div class=\"line\">  &lt;meta property=&quot;qc:admins&quot; content=&quot;153033120760567656375&quot; /&gt;  QQ登陆声明</div><div class=\"line\">  &lt;meta property=&quot;wb:webmaster&quot; content=&quot;e9da5e10879ed7c9&quot; /&gt;   微博登陆声明</div><div class=\"line\">  &lt;meta name=&quot;google-site-verification&quot; content=&quot;tPkY-Quj85Ni78uIWOIREPO9k5xczDgjch10qsLfVfs&quot; /&gt; google的网站认证代码，证明该网站的所有者是你</div></pre></td></tr></table></figure>"},{"title":"placeholder支持","date":"2017-06-01T00:16:16.000Z","_content":"IE9及以上不支持placeholder属性，可以通过一下方法模拟：\n\n\tif('placeholder' in document.createElement('input')){\n\t        }else{\n\t            $('[placeholder]').focus(function() {\n\t                var input = $(this);\n\t                if (input.val() == input.attr('placeholder')) {\n\t                    input.val('');\n\t                    input.removeClass('placeholder');\n\t                }\n\t            }).blur(function() {\n\t                var input = $(this);\n\t                if (input.val() == '' || input.val() == input.attr('placeholder')) {\n\t                    input.addClass('placeholder');\n\t                    input.val(input.attr('placeholder'));\n\t                }\n\t            }).blur();\n\t        }","source":"_posts/placeholder的支持.md","raw":"---\ntitle: placeholder支持\ndate: 2017-06-01 08:16:16\ntags: 学习\n---\nIE9及以上不支持placeholder属性，可以通过一下方法模拟：\n\n\tif('placeholder' in document.createElement('input')){\n\t        }else{\n\t            $('[placeholder]').focus(function() {\n\t                var input = $(this);\n\t                if (input.val() == input.attr('placeholder')) {\n\t                    input.val('');\n\t                    input.removeClass('placeholder');\n\t                }\n\t            }).blur(function() {\n\t                var input = $(this);\n\t                if (input.val() == '' || input.val() == input.attr('placeholder')) {\n\t                    input.addClass('placeholder');\n\t                    input.val(input.attr('placeholder'));\n\t                }\n\t            }).blur();\n\t        }","slug":"placeholder的支持","published":1,"updated":"2017-06-13T01:11:30.830Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3wffvn8000avsrjs7cfy2tq","content":"<p>IE9及以上不支持placeholder属性，可以通过一下方法模拟：</p>\n<pre><code>if(&apos;placeholder&apos; in document.createElement(&apos;input&apos;)){\n        }else{\n            $(&apos;[placeholder]&apos;).focus(function() {\n                var input = $(this);\n                if (input.val() == input.attr(&apos;placeholder&apos;)) {\n                    input.val(&apos;&apos;);\n                    input.removeClass(&apos;placeholder&apos;);\n                }\n            }).blur(function() {\n                var input = $(this);\n                if (input.val() == &apos;&apos; || input.val() == input.attr(&apos;placeholder&apos;)) {\n                    input.addClass(&apos;placeholder&apos;);\n                    input.val(input.attr(&apos;placeholder&apos;));\n                }\n            }).blur();\n        }\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<p>IE9及以上不支持placeholder属性，可以通过一下方法模拟：</p>\n<pre><code>if(&apos;placeholder&apos; in document.createElement(&apos;input&apos;)){\n        }else{\n            $(&apos;[placeholder]&apos;).focus(function() {\n                var input = $(this);\n                if (input.val() == input.attr(&apos;placeholder&apos;)) {\n                    input.val(&apos;&apos;);\n                    input.removeClass(&apos;placeholder&apos;);\n                }\n            }).blur(function() {\n                var input = $(this);\n                if (input.val() == &apos;&apos; || input.val() == input.attr(&apos;placeholder&apos;)) {\n                    input.addClass(&apos;placeholder&apos;);\n                    input.val(input.attr(&apos;placeholder&apos;));\n                }\n            }).blur();\n        }\n</code></pre>"},{"title":"图片预览上传","date":"2017-05-27T08:36:36.000Z","_content":"图片的上传和预览\n\n* HTML的布局\n      <div class='uploadImgBox'>\n      <ul class='imgList' id=\"imgListModify\">\n        <li style='background-image:url(img/2.jpg)'><span>&times;</span></li>\n        <li style='background-image:url(img/1.jpg)'><span>&times;</span></li>\n      </ul>\n      <a class='button button-big' onclick=\"loadImg(this)\">上传图片</a>\n      <input type=\"file\" accept=\"image/*\" multiple id=\"abc\">\n      </div>\n* SCSS样式\n        .uploadImgBox{\n            padding: 0 .75rem;\n        .imgList {\n            display: flex;\n            padding-left: 0;\n            margin-bottom: .5rem;\n            flex-flow: row wrap;\n            li{\n                text-align: center;\n                width: 100px;\n                height: 100px;\n                background-repeat: no-repeat;\n                background-position: center center;\n                background-size: cover;\n                margin: .5rem .5rem .5rem 0;\n                position: relative;\n                span{\n                    width: 20px;\n                    height: 20px;\n                    line-height: 20px;\n                    font-size: 1.2em;\n                    background: #000;\n                    border-radius: 50%;\n                    color:#fff;\n                    position: absolute;\n                    right: 0;\n                    top: 0;\n                    margin: -10px -10px 0 0;\n                }\n            }\n        }\n        input {\n            display: none;\n        }\n        }\n* js代码\n        function loadImg(that) {\n             if (typeof FileReader === 'undefined') {\n                $.toast('您的手机不支持上传图片', 2000,'toast-11');\n                 return \n             }\n            var inp = $(that).next('input')[0]\n                inp.click()\n                inp.onchange=function() {\n                    var imgFile = inp.files\n                    if (imgFile.length == 0) return\n                    if (imgFile.length > 9){\n                        $.toast('最多上传9张图片')\n                    }\n                    $(imgFile).each(function (i, v) {\n                        if (!/\\/(?:jpeg|png|gif)/i.test(v.type)) return;\n                        var reader = new FileReader()\n                        reader.readAsDataURL(v);\n                        reader.onload = function () { \n                            var url = this.result\n                            $(that).prev('ul').append(\"<li style='background-image:url(\"+url+\")'><span>&times;</span></li>\")\n                         }\n                    })\n                }\n        }\n\n\n\n### 参考代码 （压缩 预览 上传）原网址找不到了：\njs部分：\n\t```javascript\n\tfunction uploadImg() {\n\t\tvar filechooser = document.getElementById(\"chooseImg\");\n\t\t//    用于压缩图片的canvas\n\t\tvar canvas = document.createElement(\"canvas\");\n\t\tvar ctx = canvas.getContext('2d');\n\t\t//    瓦片canvas\n\t\tvar tCanvas = document.createElement(\"canvas\");\n\t\tvar tctx = tCanvas.getContext(\"2d\");\n\t\tvar maxsize = 100 * 1024;\n\t\t$(\"#upload\").on(\"click\", function () {\n\t\t\tfilechooser.click();\n\t\t})\n\t\tfilechooser.onchange = function () {\n\t\t\tif (!this.files.length) return;\n\t\t\tvar files = Array.prototype.slice.call(this.files);\n\t\t\tif (files.length > 9) {\n\t\t\t\talert(\"最多同时只可上传9张图片\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tfiles.forEach(function (file, i) {\n\t\t\t\tif (!/\\/(?:jpeg|png|gif)/i.test(file.type)) return;\n\t\t\t\tvar reader = new FileReader();\n\t\t\t\tvar li = document.createElement(\"li\");\n\t\t\t\t//          获取图片大小\n\t\t\t\tvar size = file.size / 1024 > 1024 ? (~~(10 * file.size / 1024 / 1024)) / 10 + \"MB\" : ~~(file.size / 1024) + \"KB\";\n\t\t\t\tli.innerHTML = '<div class=\"progress\"><span></span></div><div class=\"size\">' + size + '</div>';\n\t\t\t\t$(\".img-list\").append($(li));\n\t\t\t\treader.onload = function () {\n\t\t\t\t\tvar result = this.result;\n\t\t\t\t\tvar img = new Image();\n\t\t\t\t\timg.src = result;\n\t\t\t\t\t$(li).css(\"background-image\", \"url(\" + result + \")\");\n\t\t\t\t\t//如果图片大小小于100kb，则直接上传\n\t\t\t\t\tif (result.length <= maxsize) {\n\t\t\t\t\t\timg = null;\n\t\t\t\t\t\tupload(result, file.type, $(li));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t//      图片加载完毕之后进行压缩，然后上传\n\t\t\t\t\tif (img.complete) {\n\t\t\t\t\t\tcallback();\n\t\t\t\t\t} else {\n\t\t\t\t\t\timg.onload = callback;\n\t\t\t\t\t}\n\t\t\t\t\tfunction callback() {\n\t\t\t\t\t\tvar data = compress(img);\n\t\t\t\t\t\tupload(data, file.type, $(li));\n\t\t\t\t\t\timg = null;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\treader.readAsDataURL(file);\n\t\t\t})\n\t\t};\n\t\t//    使用canvas对大图片进行压缩\n\t\tfunction compress(img) {\n\t\t\tvar initSize = img.src.length;\n\t\t\tvar width = img.width;\n\t\t\tvar height = img.height;\n\t\t\t//如果图片大于四百万像素，计算压缩比并将大小压至400万以下\n\t\t\tvar ratio;\n\t\t\tif ((ratio = width * height / 4000000) > 1) {\n\t\t\t\tratio = Math.sqrt(ratio);\n\t\t\t\twidth /= ratio;\n\t\t\t\theight /= ratio;\n\t\t\t} else {\n\t\t\t\tratio = 1;\n\t\t\t}\n\t\t\tcanvas.width = width;\n\t\t\tcanvas.height = height;\n\t\t\t//        铺底色\n\t\t\tctx.fillStyle = \"#fff\";\n\t\t\tctx.fillRect(0, 0, canvas.width, canvas.height);\n\t\t\t//如果图片像素大于100万则使用瓦片绘制\n\t\t\tvar count;\n\t\t\tif ((count = width * height / 1000000) > 1) {\n\t\t\t\tcount = ~~(Math.sqrt(count) + 1); //计算要分成多少块瓦片\n\t\t\t\t//            计算每块瓦片的宽和高\n\t\t\t\tvar nw = ~~(width / count);\n\t\t\t\tvar nh = ~~(height / count);\n\t\t\t\ttCanvas.width = nw;\n\t\t\t\ttCanvas.height = nh;\n\t\t\t\tfor (var i = 0; i < count; i++) {\n\t\t\t\t\tfor (var j = 0; j < count; j++) {\n\t\t\t\t\t\ttctx.drawImage(img, i * nw * ratio, j * nh * ratio, nw * ratio, nh * ratio, 0, 0, nw, nh);\n\t\t\t\t\t\tctx.drawImage(tCanvas, i * nw, j * nh, nw, nh);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tctx.drawImage(img, 0, 0, width, height);\n\t\t\t}\n\t\t\t//进行最小压缩\n\t\t\tvar ndata = canvas.toDataURL('image/jpeg', 0.1);\n\t\t\tconsole.log('压缩前：' + initSize);\n\t\t\tconsole.log('压缩后：' + ndata.length);\n\t\t\tconsole.log('压缩率：' + ~~(100 * (initSize - ndata.length) / initSize) + \"%\");\n\t\t\ttCanvas.width = tCanvas.height = canvas.width = canvas.height = 0;\n\t\t\treturn ndata;\n\t\t}\n\t\t//    图片上传，将base64的图片转成二进制对象，塞进formdata上传\n\t\tfunction upload(basestr, type, $li) {\n\t\t\tvar text = window.atob(basestr.split(\",\")[1]);\n\t\t\tvar buffer = new Uint8Array(text.length);\n\t\t\tvar pecent = 0,\n\t\t\t\tloop = null;\n\t\t\tfor (var i = 0; i < text.length; i++) {\n\t\t\t\tbuffer[i] = text.charCodeAt(i);\n\t\t\t}\n\t\t\tvar blob = getBlob([buffer], type);\n\t\t\tvar xhr = new XMLHttpRequest();\n\t\t\tvar formdata = getFormData();\n\t\t\tformdata.append('imagefile', blob);\n\t\t\txhr.open('post', '/cupload');\n\t\t\txhr.onreadystatechange = function () {\n\t\t\t\tif (xhr.readyState == 4 && xhr.status == 200) {\n\t\t\t\t\tvar jsonData = JSON.parse(xhr.responseText);\n\t\t\t\t\tvar imagedata = jsonData[0] || {};\n\t\t\t\t\tvar text = imagedata.path ? '上传成功' : '上传失败';\n\t\t\t\t\tconsole.log(text + '：' + imagedata.path);\n\t\t\t\t\tclearInterval(loop);\n\t\t\t\t\t//当收到该消息时上传完毕\n\t\t\t\t\t$li.find(\".progress span\").animate({\n\t\t\t\t\t\t'width': \"100%\"\n\t\t\t\t\t}, pecent < 95 ? 200 : 0, function () {\n\t\t\t\t\t\t$(this).html(text);\n\t\t\t\t\t});\n\t\t\t\t\tif (!imagedata.path) return;\n\t\t\t\t\t$(\".pic-list\").append('<a href=\"' + imagedata.path + '\">' + imagedata.name + '（' + imagedata.size + '）<img src=\"' + imagedata.path + '\" /></a>');\n\t\t\t\t}\n\t\t\t};\n\t\t\t//数据发送进度，前50%展示该进度\n\t\t\txhr.upload.addEventListener('progress', function (e) {\n\t\t\t\tif (loop) return;\n\t\t\t\tpecent = ~~(100 * e.loaded / e.total) / 2;\n\t\t\t\t$li.find(\".progress span\").css('width', pecent + \"%\");\n\t\t\t\tif (pecent == 50) {\n\t\t\t\t\tmockProgress();\n\t\t\t\t}\n\t\t\t}, false);\n\t\t\t//数据后50%用模拟进度\n\t\t\tfunction mockProgress() {\n\t\t\t\tif (loop) return;\n\t\t\t\tloop = setInterval(function () {\n\t\t\t\t\tpecent++;\n\t\t\t\t\t$li.find(\".progress span\").css('width', pecent + \"%\");\n\t\t\t\t\tif (pecent == 99) {\n\t\t\t\t\t\tclearInterval(loop);\n\t\t\t\t\t}\n\t\t\t\t}, 100)\n\t\t\t}\n\t\t\txhr.send(formdata);\n\t\t}\n\t\t/**\n\t\t * 获取blob对象的兼容性写法\n\t\t * @param buffer\n\t\t * @param format\n\t\t * @returns {*}\n\t\t */\n\t\tfunction getBlob(buffer, format) {\n\t\t\ttry {\n\t\t\t\treturn new Blob(buffer, {\n\t\t\t\t\ttype: format\n\t\t\t\t});\n\t\t\t} catch (e) {\n\t\t\t\tvar bb = new(window.BlobBuilder || window.WebKitBlobBuilder || window.MSBlobBuilder);\n\t\t\t\tbuffer.forEach(function (buf) {\n\t\t\t\t\tbb.append(buf);\n\t\t\t\t});\n\t\t\t\treturn bb.getBlob(format);\n\t\t\t}\n\t\t}\n\t\t/**\n\t\t * 获取formdata\n\t\t */\n\t\tfunction getFormData() {\n\t\t\tvar isNeedShim = ~navigator.userAgent.indexOf('Android') &&\n\t\t\t\t~navigator.vendor.indexOf('Google') &&\n\t\t\t\t!~navigator.userAgent.indexOf('Chrome') &&\n\t\t\t\tnavigator.userAgent.match(/AppleWebKit\\/(\\d+)/).pop() <= 534;\n\t\t\treturn isNeedShim ? new FormDataShim() : new FormData()\n\t\t}\n\t\t/**\n\t\t * formdata 补丁, 给不支持formdata上传blob的android机打补丁\n\t\t * @constructor\n\t\t */\n\t\tfunction FormDataShim() {\n\t\t\tconsole.warn('using formdata shim');\n\t\t\tvar o = this,\n\t\t\t\tparts = [],\n\t\t\t\tboundary = Array(21).join('-') + (+new Date() * (1e16 * Math.random())).toString(36),\n\t\t\t\toldSend = XMLHttpRequest.prototype.send;\n\t\t\tthis.append = function (name, value, filename) {\n\t\t\t\tparts.push('--' + boundary + '\\r\\nContent-Disposition: form-data; name=\"' + name + '\"');\n\t\t\t\tif (value instanceof Blob) {\n\t\t\t\t\tparts.push('; filename=\"' + (filename || 'blob') + '\"\\r\\nContent-Type: ' + value.type + '\\r\\n\\r\\n');\n\t\t\t\t\tparts.push(value);\n\t\t\t\t} else {\n\t\t\t\t\tparts.push('\\r\\n\\r\\n' + value);\n\t\t\t\t}\n\t\t\t\tparts.push('\\r\\n');\n\t\t\t};\n\t\t\t// Override XHR send()\n\t\t\tXMLHttpRequest.prototype.send = function (val) {\n\t\t\t\tvar fr,\n\t\t\t\t\tdata,\n\t\t\t\t\toXHR = this;\n\t\t\t\tif (val === o) {\n\t\t\t\t\t// Append the final boundary string\n\t\t\t\t\tparts.push('--' + boundary + '--\\r\\n');\n\t\t\t\t\t// Create the blob\n\t\t\t\t\tdata = getBlob(parts);\n\t\t\t\t\t// Set up and read the blob into an array to be sent\n\t\t\t\t\tfr = new FileReader();\n\t\t\t\t\tfr.onload = function () {\n\t\t\t\t\t\toldSend.call(oXHR, fr.result);\n\t\t\t\t\t};\n\t\t\t\t\tfr.onerror = function (err) {\n\t\t\t\t\t\tthrow err;\n\t\t\t\t\t};\n\t\t\t\t\tfr.readAsArrayBuffer(data);\n\t\t\t\t\t// Set the multipart content type and boudary\n\t\t\t\t\tthis.setRequestHeader('Content-Type', 'multipart/form-data; boundary=' + boundary);\n\t\t\t\t\tXMLHttpRequest.prototype.send = oldSend;\n\t\t\t\t} else {\n\t\t\t\t\toldSend.call(this, val);\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n\t```","source":"_posts/图片预览上传.md","raw":"---\ntitle: 图片预览上传\ndate: 2017-05-27 16:36:36\ntags: 学习\n---\n图片的上传和预览\n\n* HTML的布局\n      <div class='uploadImgBox'>\n      <ul class='imgList' id=\"imgListModify\">\n        <li style='background-image:url(img/2.jpg)'><span>&times;</span></li>\n        <li style='background-image:url(img/1.jpg)'><span>&times;</span></li>\n      </ul>\n      <a class='button button-big' onclick=\"loadImg(this)\">上传图片</a>\n      <input type=\"file\" accept=\"image/*\" multiple id=\"abc\">\n      </div>\n* SCSS样式\n        .uploadImgBox{\n            padding: 0 .75rem;\n        .imgList {\n            display: flex;\n            padding-left: 0;\n            margin-bottom: .5rem;\n            flex-flow: row wrap;\n            li{\n                text-align: center;\n                width: 100px;\n                height: 100px;\n                background-repeat: no-repeat;\n                background-position: center center;\n                background-size: cover;\n                margin: .5rem .5rem .5rem 0;\n                position: relative;\n                span{\n                    width: 20px;\n                    height: 20px;\n                    line-height: 20px;\n                    font-size: 1.2em;\n                    background: #000;\n                    border-radius: 50%;\n                    color:#fff;\n                    position: absolute;\n                    right: 0;\n                    top: 0;\n                    margin: -10px -10px 0 0;\n                }\n            }\n        }\n        input {\n            display: none;\n        }\n        }\n* js代码\n        function loadImg(that) {\n             if (typeof FileReader === 'undefined') {\n                $.toast('您的手机不支持上传图片', 2000,'toast-11');\n                 return \n             }\n            var inp = $(that).next('input')[0]\n                inp.click()\n                inp.onchange=function() {\n                    var imgFile = inp.files\n                    if (imgFile.length == 0) return\n                    if (imgFile.length > 9){\n                        $.toast('最多上传9张图片')\n                    }\n                    $(imgFile).each(function (i, v) {\n                        if (!/\\/(?:jpeg|png|gif)/i.test(v.type)) return;\n                        var reader = new FileReader()\n                        reader.readAsDataURL(v);\n                        reader.onload = function () { \n                            var url = this.result\n                            $(that).prev('ul').append(\"<li style='background-image:url(\"+url+\")'><span>&times;</span></li>\")\n                         }\n                    })\n                }\n        }\n\n\n\n### 参考代码 （压缩 预览 上传）原网址找不到了：\njs部分：\n\t```javascript\n\tfunction uploadImg() {\n\t\tvar filechooser = document.getElementById(\"chooseImg\");\n\t\t//    用于压缩图片的canvas\n\t\tvar canvas = document.createElement(\"canvas\");\n\t\tvar ctx = canvas.getContext('2d');\n\t\t//    瓦片canvas\n\t\tvar tCanvas = document.createElement(\"canvas\");\n\t\tvar tctx = tCanvas.getContext(\"2d\");\n\t\tvar maxsize = 100 * 1024;\n\t\t$(\"#upload\").on(\"click\", function () {\n\t\t\tfilechooser.click();\n\t\t})\n\t\tfilechooser.onchange = function () {\n\t\t\tif (!this.files.length) return;\n\t\t\tvar files = Array.prototype.slice.call(this.files);\n\t\t\tif (files.length > 9) {\n\t\t\t\talert(\"最多同时只可上传9张图片\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tfiles.forEach(function (file, i) {\n\t\t\t\tif (!/\\/(?:jpeg|png|gif)/i.test(file.type)) return;\n\t\t\t\tvar reader = new FileReader();\n\t\t\t\tvar li = document.createElement(\"li\");\n\t\t\t\t//          获取图片大小\n\t\t\t\tvar size = file.size / 1024 > 1024 ? (~~(10 * file.size / 1024 / 1024)) / 10 + \"MB\" : ~~(file.size / 1024) + \"KB\";\n\t\t\t\tli.innerHTML = '<div class=\"progress\"><span></span></div><div class=\"size\">' + size + '</div>';\n\t\t\t\t$(\".img-list\").append($(li));\n\t\t\t\treader.onload = function () {\n\t\t\t\t\tvar result = this.result;\n\t\t\t\t\tvar img = new Image();\n\t\t\t\t\timg.src = result;\n\t\t\t\t\t$(li).css(\"background-image\", \"url(\" + result + \")\");\n\t\t\t\t\t//如果图片大小小于100kb，则直接上传\n\t\t\t\t\tif (result.length <= maxsize) {\n\t\t\t\t\t\timg = null;\n\t\t\t\t\t\tupload(result, file.type, $(li));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t//      图片加载完毕之后进行压缩，然后上传\n\t\t\t\t\tif (img.complete) {\n\t\t\t\t\t\tcallback();\n\t\t\t\t\t} else {\n\t\t\t\t\t\timg.onload = callback;\n\t\t\t\t\t}\n\t\t\t\t\tfunction callback() {\n\t\t\t\t\t\tvar data = compress(img);\n\t\t\t\t\t\tupload(data, file.type, $(li));\n\t\t\t\t\t\timg = null;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\treader.readAsDataURL(file);\n\t\t\t})\n\t\t};\n\t\t//    使用canvas对大图片进行压缩\n\t\tfunction compress(img) {\n\t\t\tvar initSize = img.src.length;\n\t\t\tvar width = img.width;\n\t\t\tvar height = img.height;\n\t\t\t//如果图片大于四百万像素，计算压缩比并将大小压至400万以下\n\t\t\tvar ratio;\n\t\t\tif ((ratio = width * height / 4000000) > 1) {\n\t\t\t\tratio = Math.sqrt(ratio);\n\t\t\t\twidth /= ratio;\n\t\t\t\theight /= ratio;\n\t\t\t} else {\n\t\t\t\tratio = 1;\n\t\t\t}\n\t\t\tcanvas.width = width;\n\t\t\tcanvas.height = height;\n\t\t\t//        铺底色\n\t\t\tctx.fillStyle = \"#fff\";\n\t\t\tctx.fillRect(0, 0, canvas.width, canvas.height);\n\t\t\t//如果图片像素大于100万则使用瓦片绘制\n\t\t\tvar count;\n\t\t\tif ((count = width * height / 1000000) > 1) {\n\t\t\t\tcount = ~~(Math.sqrt(count) + 1); //计算要分成多少块瓦片\n\t\t\t\t//            计算每块瓦片的宽和高\n\t\t\t\tvar nw = ~~(width / count);\n\t\t\t\tvar nh = ~~(height / count);\n\t\t\t\ttCanvas.width = nw;\n\t\t\t\ttCanvas.height = nh;\n\t\t\t\tfor (var i = 0; i < count; i++) {\n\t\t\t\t\tfor (var j = 0; j < count; j++) {\n\t\t\t\t\t\ttctx.drawImage(img, i * nw * ratio, j * nh * ratio, nw * ratio, nh * ratio, 0, 0, nw, nh);\n\t\t\t\t\t\tctx.drawImage(tCanvas, i * nw, j * nh, nw, nh);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tctx.drawImage(img, 0, 0, width, height);\n\t\t\t}\n\t\t\t//进行最小压缩\n\t\t\tvar ndata = canvas.toDataURL('image/jpeg', 0.1);\n\t\t\tconsole.log('压缩前：' + initSize);\n\t\t\tconsole.log('压缩后：' + ndata.length);\n\t\t\tconsole.log('压缩率：' + ~~(100 * (initSize - ndata.length) / initSize) + \"%\");\n\t\t\ttCanvas.width = tCanvas.height = canvas.width = canvas.height = 0;\n\t\t\treturn ndata;\n\t\t}\n\t\t//    图片上传，将base64的图片转成二进制对象，塞进formdata上传\n\t\tfunction upload(basestr, type, $li) {\n\t\t\tvar text = window.atob(basestr.split(\",\")[1]);\n\t\t\tvar buffer = new Uint8Array(text.length);\n\t\t\tvar pecent = 0,\n\t\t\t\tloop = null;\n\t\t\tfor (var i = 0; i < text.length; i++) {\n\t\t\t\tbuffer[i] = text.charCodeAt(i);\n\t\t\t}\n\t\t\tvar blob = getBlob([buffer], type);\n\t\t\tvar xhr = new XMLHttpRequest();\n\t\t\tvar formdata = getFormData();\n\t\t\tformdata.append('imagefile', blob);\n\t\t\txhr.open('post', '/cupload');\n\t\t\txhr.onreadystatechange = function () {\n\t\t\t\tif (xhr.readyState == 4 && xhr.status == 200) {\n\t\t\t\t\tvar jsonData = JSON.parse(xhr.responseText);\n\t\t\t\t\tvar imagedata = jsonData[0] || {};\n\t\t\t\t\tvar text = imagedata.path ? '上传成功' : '上传失败';\n\t\t\t\t\tconsole.log(text + '：' + imagedata.path);\n\t\t\t\t\tclearInterval(loop);\n\t\t\t\t\t//当收到该消息时上传完毕\n\t\t\t\t\t$li.find(\".progress span\").animate({\n\t\t\t\t\t\t'width': \"100%\"\n\t\t\t\t\t}, pecent < 95 ? 200 : 0, function () {\n\t\t\t\t\t\t$(this).html(text);\n\t\t\t\t\t});\n\t\t\t\t\tif (!imagedata.path) return;\n\t\t\t\t\t$(\".pic-list\").append('<a href=\"' + imagedata.path + '\">' + imagedata.name + '（' + imagedata.size + '）<img src=\"' + imagedata.path + '\" /></a>');\n\t\t\t\t}\n\t\t\t};\n\t\t\t//数据发送进度，前50%展示该进度\n\t\t\txhr.upload.addEventListener('progress', function (e) {\n\t\t\t\tif (loop) return;\n\t\t\t\tpecent = ~~(100 * e.loaded / e.total) / 2;\n\t\t\t\t$li.find(\".progress span\").css('width', pecent + \"%\");\n\t\t\t\tif (pecent == 50) {\n\t\t\t\t\tmockProgress();\n\t\t\t\t}\n\t\t\t}, false);\n\t\t\t//数据后50%用模拟进度\n\t\t\tfunction mockProgress() {\n\t\t\t\tif (loop) return;\n\t\t\t\tloop = setInterval(function () {\n\t\t\t\t\tpecent++;\n\t\t\t\t\t$li.find(\".progress span\").css('width', pecent + \"%\");\n\t\t\t\t\tif (pecent == 99) {\n\t\t\t\t\t\tclearInterval(loop);\n\t\t\t\t\t}\n\t\t\t\t}, 100)\n\t\t\t}\n\t\t\txhr.send(formdata);\n\t\t}\n\t\t/**\n\t\t * 获取blob对象的兼容性写法\n\t\t * @param buffer\n\t\t * @param format\n\t\t * @returns {*}\n\t\t */\n\t\tfunction getBlob(buffer, format) {\n\t\t\ttry {\n\t\t\t\treturn new Blob(buffer, {\n\t\t\t\t\ttype: format\n\t\t\t\t});\n\t\t\t} catch (e) {\n\t\t\t\tvar bb = new(window.BlobBuilder || window.WebKitBlobBuilder || window.MSBlobBuilder);\n\t\t\t\tbuffer.forEach(function (buf) {\n\t\t\t\t\tbb.append(buf);\n\t\t\t\t});\n\t\t\t\treturn bb.getBlob(format);\n\t\t\t}\n\t\t}\n\t\t/**\n\t\t * 获取formdata\n\t\t */\n\t\tfunction getFormData() {\n\t\t\tvar isNeedShim = ~navigator.userAgent.indexOf('Android') &&\n\t\t\t\t~navigator.vendor.indexOf('Google') &&\n\t\t\t\t!~navigator.userAgent.indexOf('Chrome') &&\n\t\t\t\tnavigator.userAgent.match(/AppleWebKit\\/(\\d+)/).pop() <= 534;\n\t\t\treturn isNeedShim ? new FormDataShim() : new FormData()\n\t\t}\n\t\t/**\n\t\t * formdata 补丁, 给不支持formdata上传blob的android机打补丁\n\t\t * @constructor\n\t\t */\n\t\tfunction FormDataShim() {\n\t\t\tconsole.warn('using formdata shim');\n\t\t\tvar o = this,\n\t\t\t\tparts = [],\n\t\t\t\tboundary = Array(21).join('-') + (+new Date() * (1e16 * Math.random())).toString(36),\n\t\t\t\toldSend = XMLHttpRequest.prototype.send;\n\t\t\tthis.append = function (name, value, filename) {\n\t\t\t\tparts.push('--' + boundary + '\\r\\nContent-Disposition: form-data; name=\"' + name + '\"');\n\t\t\t\tif (value instanceof Blob) {\n\t\t\t\t\tparts.push('; filename=\"' + (filename || 'blob') + '\"\\r\\nContent-Type: ' + value.type + '\\r\\n\\r\\n');\n\t\t\t\t\tparts.push(value);\n\t\t\t\t} else {\n\t\t\t\t\tparts.push('\\r\\n\\r\\n' + value);\n\t\t\t\t}\n\t\t\t\tparts.push('\\r\\n');\n\t\t\t};\n\t\t\t// Override XHR send()\n\t\t\tXMLHttpRequest.prototype.send = function (val) {\n\t\t\t\tvar fr,\n\t\t\t\t\tdata,\n\t\t\t\t\toXHR = this;\n\t\t\t\tif (val === o) {\n\t\t\t\t\t// Append the final boundary string\n\t\t\t\t\tparts.push('--' + boundary + '--\\r\\n');\n\t\t\t\t\t// Create the blob\n\t\t\t\t\tdata = getBlob(parts);\n\t\t\t\t\t// Set up and read the blob into an array to be sent\n\t\t\t\t\tfr = new FileReader();\n\t\t\t\t\tfr.onload = function () {\n\t\t\t\t\t\toldSend.call(oXHR, fr.result);\n\t\t\t\t\t};\n\t\t\t\t\tfr.onerror = function (err) {\n\t\t\t\t\t\tthrow err;\n\t\t\t\t\t};\n\t\t\t\t\tfr.readAsArrayBuffer(data);\n\t\t\t\t\t// Set the multipart content type and boudary\n\t\t\t\t\tthis.setRequestHeader('Content-Type', 'multipart/form-data; boundary=' + boundary);\n\t\t\t\t\tXMLHttpRequest.prototype.send = oldSend;\n\t\t\t\t} else {\n\t\t\t\t\toldSend.call(this, val);\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n\t```","slug":"图片预览上传","published":1,"updated":"2017-06-13T01:11:30.830Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3wffvnd000dvsrjhq9gdv6i","content":"<p>图片的上传和预览</p>\n<ul>\n<li>HTML的布局<pre><code>&lt;div class=&apos;uploadImgBox&apos;&gt;\n&lt;ul class=&apos;imgList&apos; id=&quot;imgListModify&quot;&gt;\n  &lt;li style=&apos;background-image:url(img/2.jpg)&apos;&gt;&lt;span&gt;&amp;times;&lt;/span&gt;&lt;/li&gt;\n  &lt;li style=&apos;background-image:url(img/1.jpg)&apos;&gt;&lt;span&gt;&amp;times;&lt;/span&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;a class=&apos;button button-big&apos; onclick=&quot;loadImg(this)&quot;&gt;上传图片&lt;/a&gt;\n&lt;input type=&quot;file&quot; accept=&quot;image/*&quot; multiple id=&quot;abc&quot;&gt;\n&lt;/div&gt;\n</code></pre></li>\n<li>SCSS样式<pre><code>.uploadImgBox{\n    padding: 0 .75rem;\n.imgList {\n    display: flex;\n    padding-left: 0;\n    margin-bottom: .5rem;\n    flex-flow: row wrap;\n    li{\n        text-align: center;\n        width: 100px;\n        height: 100px;\n        background-repeat: no-repeat;\n        background-position: center center;\n        background-size: cover;\n        margin: .5rem .5rem .5rem 0;\n        position: relative;\n        span{\n            width: 20px;\n            height: 20px;\n            line-height: 20px;\n            font-size: 1.2em;\n            background: #000;\n            border-radius: 50%;\n            color:#fff;\n            position: absolute;\n            right: 0;\n            top: 0;\n            margin: -10px -10px 0 0;\n        }\n    }\n}\ninput {\n    display: none;\n}\n}\n</code></pre></li>\n<li>js代码<pre><code>function loadImg(that) {\n     if (typeof FileReader === &apos;undefined&apos;) {\n        $.toast(&apos;您的手机不支持上传图片&apos;, 2000,&apos;toast-11&apos;);\n         return \n     }\n    var inp = $(that).next(&apos;input&apos;)[0]\n        inp.click()\n        inp.onchange=function() {\n            var imgFile = inp.files\n            if (imgFile.length == 0) return\n            if (imgFile.length &gt; 9){\n                $.toast(&apos;最多上传9张图片&apos;)\n            }\n            $(imgFile).each(function (i, v) {\n                if (!/\\/(?:jpeg|png|gif)/i.test(v.type)) return;\n                var reader = new FileReader()\n                reader.readAsDataURL(v);\n                reader.onload = function () { \n                    var url = this.result\n                    $(that).prev(&apos;ul&apos;).append(&quot;&lt;li style=&apos;background-image:url(&quot;+url+&quot;)&apos;&gt;&lt;span&gt;&amp;times;&lt;/span&gt;&lt;/li&gt;&quot;)\n                 }\n            })\n        }\n}\n</code></pre></li>\n</ul>\n<h3 id=\"参考代码-（压缩-预览-上传）原网址找不到了：\"><a href=\"#参考代码-（压缩-预览-上传）原网址找不到了：\" class=\"headerlink\" title=\"参考代码 （压缩 预览 上传）原网址找不到了：\"></a>参考代码 （压缩 预览 上传）原网址找不到了：</h3><p>js部分：<br>    <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div><div class=\"line\">184</div><div class=\"line\">185</div><div class=\"line\">186</div><div class=\"line\">187</div><div class=\"line\">188</div><div class=\"line\">189</div><div class=\"line\">190</div><div class=\"line\">191</div><div class=\"line\">192</div><div class=\"line\">193</div><div class=\"line\">194</div><div class=\"line\">195</div><div class=\"line\">196</div><div class=\"line\">197</div><div class=\"line\">198</div><div class=\"line\">199</div><div class=\"line\">200</div><div class=\"line\">201</div><div class=\"line\">202</div><div class=\"line\">203</div><div class=\"line\">204</div><div class=\"line\">205</div><div class=\"line\">206</div><div class=\"line\">207</div><div class=\"line\">208</div><div class=\"line\">209</div><div class=\"line\">210</div><div class=\"line\">211</div><div class=\"line\">212</div><div class=\"line\">213</div><div class=\"line\">214</div><div class=\"line\">215</div><div class=\"line\">216</div><div class=\"line\">217</div><div class=\"line\">218</div><div class=\"line\">219</div><div class=\"line\">220</div><div class=\"line\">221</div><div class=\"line\">222</div><div class=\"line\">223</div><div class=\"line\">224</div><div class=\"line\">225</div><div class=\"line\">226</div><div class=\"line\">227</div><div class=\"line\">228</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">uploadImg</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">var</span> filechooser = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"chooseImg\"</span>);</div><div class=\"line\">\t<span class=\"comment\">//    用于压缩图片的canvas</span></div><div class=\"line\">\t<span class=\"keyword\">var</span> canvas = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"canvas\"</span>);</div><div class=\"line\">\t<span class=\"keyword\">var</span> ctx = canvas.getContext(<span class=\"string\">'2d'</span>);</div><div class=\"line\">\t<span class=\"comment\">//    瓦片canvas</span></div><div class=\"line\">\t<span class=\"keyword\">var</span> tCanvas = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"canvas\"</span>);</div><div class=\"line\">\t<span class=\"keyword\">var</span> tctx = tCanvas.getContext(<span class=\"string\">\"2d\"</span>);</div><div class=\"line\">\t<span class=\"keyword\">var</span> maxsize = <span class=\"number\">100</span> * <span class=\"number\">1024</span>;</div><div class=\"line\">\t$(<span class=\"string\">\"#upload\"</span>).on(<span class=\"string\">\"click\"</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">\t\tfilechooser.click();</div><div class=\"line\">\t&#125;)</div><div class=\"line\">\tfilechooser.onchange = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (!<span class=\"keyword\">this</span>.files.length) <span class=\"keyword\">return</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">var</span> files = <span class=\"built_in\">Array</span>.prototype.slice.call(<span class=\"keyword\">this</span>.files);</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (files.length &gt; <span class=\"number\">9</span>) &#123;</div><div class=\"line\">\t\t\talert(<span class=\"string\">\"最多同时只可上传9张图片\"</span>);</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span>;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\tfiles.forEach(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">file, i</span>) </span>&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (!<span class=\"regexp\">/\\/(?:jpeg|png|gif)/i</span>.test(file.type)) <span class=\"keyword\">return</span>;</div><div class=\"line\">\t\t\t<span class=\"keyword\">var</span> reader = <span class=\"keyword\">new</span> FileReader();</div><div class=\"line\">\t\t\t<span class=\"keyword\">var</span> li = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"li\"</span>);</div><div class=\"line\">\t\t\t<span class=\"comment\">//          获取图片大小</span></div><div class=\"line\">\t\t\t<span class=\"keyword\">var</span> size = file.size / <span class=\"number\">1024</span> &gt; <span class=\"number\">1024</span> ? (~~(<span class=\"number\">10</span> * file.size / <span class=\"number\">1024</span> / <span class=\"number\">1024</span>)) / <span class=\"number\">10</span> + <span class=\"string\">\"MB\"</span> : ~~(file.size / <span class=\"number\">1024</span>) + <span class=\"string\">\"KB\"</span>;</div><div class=\"line\">\t\t\tli.innerHTML = <span class=\"string\">'&lt;div class=\"progress\"&gt;&lt;span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=\"size\"&gt;'</span> + size + <span class=\"string\">'&lt;/div&gt;'</span>;</div><div class=\"line\">\t\t\t$(<span class=\"string\">\".img-list\"</span>).append($(li));</div><div class=\"line\">\t\t\treader.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">var</span> result = <span class=\"keyword\">this</span>.result;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">var</span> img = <span class=\"keyword\">new</span> Image();</div><div class=\"line\">\t\t\t\timg.src = result;</div><div class=\"line\">\t\t\t\t$(li).css(<span class=\"string\">\"background-image\"</span>, <span class=\"string\">\"url(\"</span> + result + <span class=\"string\">\")\"</span>);</div><div class=\"line\">\t\t\t\t<span class=\"comment\">//如果图片大小小于100kb，则直接上传</span></div><div class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (result.length &lt;= maxsize) &#123;</div><div class=\"line\">\t\t\t\t\timg = <span class=\"literal\">null</span>;</div><div class=\"line\">\t\t\t\t\tupload(result, file.type, $(li));</div><div class=\"line\">\t\t\t\t\t<span class=\"keyword\">return</span>;</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t\t<span class=\"comment\">//      图片加载完毕之后进行压缩，然后上传</span></div><div class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (img.complete) &#123;</div><div class=\"line\">\t\t\t\t\tcallback();</div><div class=\"line\">\t\t\t\t&#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">\t\t\t\t\timg.onload = callback;</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t\t<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">callback</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">\t\t\t\t\t<span class=\"keyword\">var</span> data = compress(img);</div><div class=\"line\">\t\t\t\t\tupload(data, file.type, $(li));</div><div class=\"line\">\t\t\t\t\timg = <span class=\"literal\">null</span>;</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t&#125;;</div><div class=\"line\">\t\t\treader.readAsDataURL(file);</div><div class=\"line\">\t\t&#125;)</div><div class=\"line\">\t&#125;;</div><div class=\"line\">\t<span class=\"comment\">//    使用canvas对大图片进行压缩</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">compress</span>(<span class=\"params\">img</span>) </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">var</span> initSize = img.src.length;</div><div class=\"line\">\t\t<span class=\"keyword\">var</span> width = img.width;</div><div class=\"line\">\t\t<span class=\"keyword\">var</span> height = img.height;</div><div class=\"line\">\t\t<span class=\"comment\">//如果图片大于四百万像素，计算压缩比并将大小压至400万以下</span></div><div class=\"line\">\t\t<span class=\"keyword\">var</span> ratio;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> ((ratio = width * height / <span class=\"number\">4000000</span>) &gt; <span class=\"number\">1</span>) &#123;</div><div class=\"line\">\t\t\tratio = <span class=\"built_in\">Math</span>.sqrt(ratio);</div><div class=\"line\">\t\t\twidth /= ratio;</div><div class=\"line\">\t\t\theight /= ratio;</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">\t\t\tratio = <span class=\"number\">1</span>;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\tcanvas.width = width;</div><div class=\"line\">\t\tcanvas.height = height;</div><div class=\"line\">\t\t<span class=\"comment\">//        铺底色</span></div><div class=\"line\">\t\tctx.fillStyle = <span class=\"string\">\"#fff\"</span>;</div><div class=\"line\">\t\tctx.fillRect(<span class=\"number\">0</span>, <span class=\"number\">0</span>, canvas.width, canvas.height);</div><div class=\"line\">\t\t<span class=\"comment\">//如果图片像素大于100万则使用瓦片绘制</span></div><div class=\"line\">\t\t<span class=\"keyword\">var</span> count;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> ((count = width * height / <span class=\"number\">1000000</span>) &gt; <span class=\"number\">1</span>) &#123;</div><div class=\"line\">\t\t\tcount = ~~(<span class=\"built_in\">Math</span>.sqrt(count) + <span class=\"number\">1</span>); <span class=\"comment\">//计算要分成多少块瓦片</span></div><div class=\"line\">\t\t\t<span class=\"comment\">//            计算每块瓦片的宽和高</span></div><div class=\"line\">\t\t\t<span class=\"keyword\">var</span> nw = ~~(width / count);</div><div class=\"line\">\t\t\t<span class=\"keyword\">var</span> nh = ~~(height / count);</div><div class=\"line\">\t\t\ttCanvas.width = nw;</div><div class=\"line\">\t\t\ttCanvas.height = nh;</div><div class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; count; i++) &#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> j = <span class=\"number\">0</span>; j &lt; count; j++) &#123;</div><div class=\"line\">\t\t\t\t\ttctx.drawImage(img, i * nw * ratio, j * nh * ratio, nw * ratio, nh * ratio, <span class=\"number\">0</span>, <span class=\"number\">0</span>, nw, nh);</div><div class=\"line\">\t\t\t\t\tctx.drawImage(tCanvas, i * nw, j * nh, nw, nh);</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">\t\t\tctx.drawImage(img, <span class=\"number\">0</span>, <span class=\"number\">0</span>, width, height);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"comment\">//进行最小压缩</span></div><div class=\"line\">\t\t<span class=\"keyword\">var</span> ndata = canvas.toDataURL(<span class=\"string\">'image/jpeg'</span>, <span class=\"number\">0.1</span>);</div><div class=\"line\">\t\t<span class=\"built_in\">console</span>.log(<span class=\"string\">'压缩前：'</span> + initSize);</div><div class=\"line\">\t\t<span class=\"built_in\">console</span>.log(<span class=\"string\">'压缩后：'</span> + ndata.length);</div><div class=\"line\">\t\t<span class=\"built_in\">console</span>.log(<span class=\"string\">'压缩率：'</span> + ~~(<span class=\"number\">100</span> * (initSize - ndata.length) / initSize) + <span class=\"string\">\"%\"</span>);</div><div class=\"line\">\t\ttCanvas.width = tCanvas.height = canvas.width = canvas.height = <span class=\"number\">0</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> ndata;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"comment\">//    图片上传，将base64的图片转成二进制对象，塞进formdata上传</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">upload</span>(<span class=\"params\">basestr, type, $li</span>) </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">var</span> text = <span class=\"built_in\">window</span>.atob(basestr.split(<span class=\"string\">\",\"</span>)[<span class=\"number\">1</span>]);</div><div class=\"line\">\t\t<span class=\"keyword\">var</span> buffer = <span class=\"keyword\">new</span> <span class=\"built_in\">Uint8Array</span>(text.length);</div><div class=\"line\">\t\t<span class=\"keyword\">var</span> pecent = <span class=\"number\">0</span>,</div><div class=\"line\">\t\t\tloop = <span class=\"literal\">null</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; text.length; i++) &#123;</div><div class=\"line\">\t\t\tbuffer[i] = text.charCodeAt(i);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">var</span> blob = getBlob([buffer], type);</div><div class=\"line\">\t\t<span class=\"keyword\">var</span> xhr = <span class=\"keyword\">new</span> XMLHttpRequest();</div><div class=\"line\">\t\t<span class=\"keyword\">var</span> formdata = getFormData();</div><div class=\"line\">\t\tformdata.append(<span class=\"string\">'imagefile'</span>, blob);</div><div class=\"line\">\t\txhr.open(<span class=\"string\">'post'</span>, <span class=\"string\">'/cupload'</span>);</div><div class=\"line\">\t\txhr.onreadystatechange = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (xhr.readyState == <span class=\"number\">4</span> &amp;&amp; xhr.status == <span class=\"number\">200</span>) &#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">var</span> jsonData = <span class=\"built_in\">JSON</span>.parse(xhr.responseText);</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">var</span> imagedata = jsonData[<span class=\"number\">0</span>] || &#123;&#125;;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">var</span> text = imagedata.path ? <span class=\"string\">'上传成功'</span> : <span class=\"string\">'上传失败'</span>;</div><div class=\"line\">\t\t\t\t<span class=\"built_in\">console</span>.log(text + <span class=\"string\">'：'</span> + imagedata.path);</div><div class=\"line\">\t\t\t\tclearInterval(loop);</div><div class=\"line\">\t\t\t\t<span class=\"comment\">//当收到该消息时上传完毕</span></div><div class=\"line\">\t\t\t\t$li.find(<span class=\"string\">\".progress span\"</span>).animate(&#123;</div><div class=\"line\">\t\t\t\t\t<span class=\"string\">'width'</span>: <span class=\"string\">\"100%\"</span></div><div class=\"line\">\t\t\t\t&#125;, pecent &lt; <span class=\"number\">95</span> ? <span class=\"number\">200</span> : <span class=\"number\">0</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">\t\t\t\t\t$(<span class=\"keyword\">this</span>).html(text);</div><div class=\"line\">\t\t\t\t&#125;);</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (!imagedata.path) <span class=\"keyword\">return</span>;</div><div class=\"line\">\t\t\t\t$(<span class=\"string\">\".pic-list\"</span>).append(<span class=\"string\">'&lt;a href=\"'</span> + imagedata.path + <span class=\"string\">'\"&gt;'</span> + imagedata.name + <span class=\"string\">'（'</span> + imagedata.size + <span class=\"string\">'）&lt;img src=\"'</span> + imagedata.path + <span class=\"string\">'\" /&gt;&lt;/a&gt;'</span>);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;;</div><div class=\"line\">\t\t<span class=\"comment\">//数据发送进度，前50%展示该进度</span></div><div class=\"line\">\t\txhr.upload.addEventListener(<span class=\"string\">'progress'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (loop) <span class=\"keyword\">return</span>;</div><div class=\"line\">\t\t\tpecent = ~~(<span class=\"number\">100</span> * e.loaded / e.total) / <span class=\"number\">2</span>;</div><div class=\"line\">\t\t\t$li.find(<span class=\"string\">\".progress span\"</span>).css(<span class=\"string\">'width'</span>, pecent + <span class=\"string\">\"%\"</span>);</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (pecent == <span class=\"number\">50</span>) &#123;</div><div class=\"line\">\t\t\t\tmockProgress();</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;, <span class=\"literal\">false</span>);</div><div class=\"line\">\t\t<span class=\"comment\">//数据后50%用模拟进度</span></div><div class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">mockProgress</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (loop) <span class=\"keyword\">return</span>;</div><div class=\"line\">\t\t\tloop = setInterval(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">\t\t\t\tpecent++;</div><div class=\"line\">\t\t\t\t$li.find(<span class=\"string\">\".progress span\"</span>).css(<span class=\"string\">'width'</span>, pecent + <span class=\"string\">\"%\"</span>);</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (pecent == <span class=\"number\">99</span>) &#123;</div><div class=\"line\">\t\t\t\t\tclearInterval(loop);</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t&#125;, <span class=\"number\">100</span>)</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\txhr.send(formdata);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 获取blob对象的兼容性写法</div><div class=\"line\">\t * @param buffer</div><div class=\"line\">\t * @param format</div><div class=\"line\">\t * @returns &#123;*&#125;</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getBlob</span>(<span class=\"params\">buffer, format</span>) </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Blob(buffer, &#123;</div><div class=\"line\">\t\t\t\t<span class=\"attr\">type</span>: format</div><div class=\"line\">\t\t\t&#125;);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (e) &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">var</span> bb = <span class=\"keyword\">new</span>(<span class=\"built_in\">window</span>.BlobBuilder || <span class=\"built_in\">window</span>.WebKitBlobBuilder || <span class=\"built_in\">window</span>.MSBlobBuilder);</div><div class=\"line\">\t\t\tbuffer.forEach(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">buf</span>) </span>&#123;</div><div class=\"line\">\t\t\t\tbb.append(buf);</div><div class=\"line\">\t\t\t&#125;);</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> bb.getBlob(format);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 获取formdata</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getFormData</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">var</span> isNeedShim = ~navigator.userAgent.indexOf(<span class=\"string\">'Android'</span>) &amp;&amp;</div><div class=\"line\">\t\t\t~navigator.vendor.indexOf(<span class=\"string\">'Google'</span>) &amp;&amp;</div><div class=\"line\">\t\t\t!~navigator.userAgent.indexOf(<span class=\"string\">'Chrome'</span>) &amp;&amp;</div><div class=\"line\">\t\t\tnavigator.userAgent.match(<span class=\"regexp\">/AppleWebKit\\/(\\d+)/</span>).pop() &lt;= <span class=\"number\">534</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> isNeedShim ? <span class=\"keyword\">new</span> FormDataShim() : <span class=\"keyword\">new</span> FormData()</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * formdata 补丁, 给不支持formdata上传blob的android机打补丁</div><div class=\"line\">\t * @constructor</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">FormDataShim</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">\t\t<span class=\"built_in\">console</span>.warn(<span class=\"string\">'using formdata shim'</span>);</div><div class=\"line\">\t\t<span class=\"keyword\">var</span> o = <span class=\"keyword\">this</span>,</div><div class=\"line\">\t\t\tparts = [],</div><div class=\"line\">\t\t\tboundary = <span class=\"built_in\">Array</span>(<span class=\"number\">21</span>).join(<span class=\"string\">'-'</span>) + (+<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>() * (<span class=\"number\">1e16</span> * <span class=\"built_in\">Math</span>.random())).toString(<span class=\"number\">36</span>),</div><div class=\"line\">\t\t\toldSend = XMLHttpRequest.prototype.send;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.append = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">name, value, filename</span>) </span>&#123;</div><div class=\"line\">\t\t\tparts.push(<span class=\"string\">'--'</span> + boundary + <span class=\"string\">'\\r\\nContent-Disposition: form-data; name=\"'</span> + name + <span class=\"string\">'\"'</span>);</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (value <span class=\"keyword\">instanceof</span> Blob) &#123;</div><div class=\"line\">\t\t\t\tparts.push(<span class=\"string\">'; filename=\"'</span> + (filename || <span class=\"string\">'blob'</span>) + <span class=\"string\">'\"\\r\\nContent-Type: '</span> + value.type + <span class=\"string\">'\\r\\n\\r\\n'</span>);</div><div class=\"line\">\t\t\t\tparts.push(value);</div><div class=\"line\">\t\t\t&#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">\t\t\t\tparts.push(<span class=\"string\">'\\r\\n\\r\\n'</span> + value);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\tparts.push(<span class=\"string\">'\\r\\n'</span>);</div><div class=\"line\">\t\t&#125;;</div><div class=\"line\">\t\t<span class=\"comment\">// Override XHR send()</span></div><div class=\"line\">\t\tXMLHttpRequest.prototype.send = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">val</span>) </span>&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">var</span> fr,</div><div class=\"line\">\t\t\t\tdata,</div><div class=\"line\">\t\t\t\toXHR = <span class=\"keyword\">this</span>;</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (val === o) &#123;</div><div class=\"line\">\t\t\t\t<span class=\"comment\">// Append the final boundary string</span></div><div class=\"line\">\t\t\t\tparts.push(<span class=\"string\">'--'</span> + boundary + <span class=\"string\">'--\\r\\n'</span>);</div><div class=\"line\">\t\t\t\t<span class=\"comment\">// Create the blob</span></div><div class=\"line\">\t\t\t\tdata = getBlob(parts);</div><div class=\"line\">\t\t\t\t<span class=\"comment\">// Set up and read the blob into an array to be sent</span></div><div class=\"line\">\t\t\t\tfr = <span class=\"keyword\">new</span> FileReader();</div><div class=\"line\">\t\t\t\tfr.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">\t\t\t\t\toldSend.call(oXHR, fr.result);</div><div class=\"line\">\t\t\t\t&#125;;</div><div class=\"line\">\t\t\t\tfr.onerror = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">err</span>) </span>&#123;</div><div class=\"line\">\t\t\t\t\t<span class=\"keyword\">throw</span> err;</div><div class=\"line\">\t\t\t\t&#125;;</div><div class=\"line\">\t\t\t\tfr.readAsArrayBuffer(data);</div><div class=\"line\">\t\t\t\t<span class=\"comment\">// Set the multipart content type and boudary</span></div><div class=\"line\">\t\t\t\t<span class=\"keyword\">this</span>.setRequestHeader(<span class=\"string\">'Content-Type'</span>, <span class=\"string\">'multipart/form-data; boundary='</span> + boundary);</div><div class=\"line\">\t\t\t\tXMLHttpRequest.prototype.send = oldSend;</div><div class=\"line\">\t\t\t&#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">\t\t\t\toldSend.call(<span class=\"keyword\">this</span>, val);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>图片的上传和预览</p>\n<ul>\n<li>HTML的布局<pre><code>&lt;div class=&apos;uploadImgBox&apos;&gt;\n&lt;ul class=&apos;imgList&apos; id=&quot;imgListModify&quot;&gt;\n  &lt;li style=&apos;background-image:url(img/2.jpg)&apos;&gt;&lt;span&gt;&amp;times;&lt;/span&gt;&lt;/li&gt;\n  &lt;li style=&apos;background-image:url(img/1.jpg)&apos;&gt;&lt;span&gt;&amp;times;&lt;/span&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;a class=&apos;button button-big&apos; onclick=&quot;loadImg(this)&quot;&gt;上传图片&lt;/a&gt;\n&lt;input type=&quot;file&quot; accept=&quot;image/*&quot; multiple id=&quot;abc&quot;&gt;\n&lt;/div&gt;\n</code></pre></li>\n<li>SCSS样式<pre><code>.uploadImgBox{\n    padding: 0 .75rem;\n.imgList {\n    display: flex;\n    padding-left: 0;\n    margin-bottom: .5rem;\n    flex-flow: row wrap;\n    li{\n        text-align: center;\n        width: 100px;\n        height: 100px;\n        background-repeat: no-repeat;\n        background-position: center center;\n        background-size: cover;\n        margin: .5rem .5rem .5rem 0;\n        position: relative;\n        span{\n            width: 20px;\n            height: 20px;\n            line-height: 20px;\n            font-size: 1.2em;\n            background: #000;\n            border-radius: 50%;\n            color:#fff;\n            position: absolute;\n            right: 0;\n            top: 0;\n            margin: -10px -10px 0 0;\n        }\n    }\n}\ninput {\n    display: none;\n}\n}\n</code></pre></li>\n<li>js代码<pre><code>function loadImg(that) {\n     if (typeof FileReader === &apos;undefined&apos;) {\n        $.toast(&apos;您的手机不支持上传图片&apos;, 2000,&apos;toast-11&apos;);\n         return \n     }\n    var inp = $(that).next(&apos;input&apos;)[0]\n        inp.click()\n        inp.onchange=function() {\n            var imgFile = inp.files\n            if (imgFile.length == 0) return\n            if (imgFile.length &gt; 9){\n                $.toast(&apos;最多上传9张图片&apos;)\n            }\n            $(imgFile).each(function (i, v) {\n                if (!/\\/(?:jpeg|png|gif)/i.test(v.type)) return;\n                var reader = new FileReader()\n                reader.readAsDataURL(v);\n                reader.onload = function () { \n                    var url = this.result\n                    $(that).prev(&apos;ul&apos;).append(&quot;&lt;li style=&apos;background-image:url(&quot;+url+&quot;)&apos;&gt;&lt;span&gt;&amp;times;&lt;/span&gt;&lt;/li&gt;&quot;)\n                 }\n            })\n        }\n}\n</code></pre></li>\n</ul>\n<h3 id=\"参考代码-（压缩-预览-上传）原网址找不到了：\"><a href=\"#参考代码-（压缩-预览-上传）原网址找不到了：\" class=\"headerlink\" title=\"参考代码 （压缩 预览 上传）原网址找不到了：\"></a>参考代码 （压缩 预览 上传）原网址找不到了：</h3><p>js部分：<br>    <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div><div class=\"line\">184</div><div class=\"line\">185</div><div class=\"line\">186</div><div class=\"line\">187</div><div class=\"line\">188</div><div class=\"line\">189</div><div class=\"line\">190</div><div class=\"line\">191</div><div class=\"line\">192</div><div class=\"line\">193</div><div class=\"line\">194</div><div class=\"line\">195</div><div class=\"line\">196</div><div class=\"line\">197</div><div class=\"line\">198</div><div class=\"line\">199</div><div class=\"line\">200</div><div class=\"line\">201</div><div class=\"line\">202</div><div class=\"line\">203</div><div class=\"line\">204</div><div class=\"line\">205</div><div class=\"line\">206</div><div class=\"line\">207</div><div class=\"line\">208</div><div class=\"line\">209</div><div class=\"line\">210</div><div class=\"line\">211</div><div class=\"line\">212</div><div class=\"line\">213</div><div class=\"line\">214</div><div class=\"line\">215</div><div class=\"line\">216</div><div class=\"line\">217</div><div class=\"line\">218</div><div class=\"line\">219</div><div class=\"line\">220</div><div class=\"line\">221</div><div class=\"line\">222</div><div class=\"line\">223</div><div class=\"line\">224</div><div class=\"line\">225</div><div class=\"line\">226</div><div class=\"line\">227</div><div class=\"line\">228</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">uploadImg</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">var</span> filechooser = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"chooseImg\"</span>);</div><div class=\"line\">\t<span class=\"comment\">//    用于压缩图片的canvas</span></div><div class=\"line\">\t<span class=\"keyword\">var</span> canvas = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"canvas\"</span>);</div><div class=\"line\">\t<span class=\"keyword\">var</span> ctx = canvas.getContext(<span class=\"string\">'2d'</span>);</div><div class=\"line\">\t<span class=\"comment\">//    瓦片canvas</span></div><div class=\"line\">\t<span class=\"keyword\">var</span> tCanvas = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"canvas\"</span>);</div><div class=\"line\">\t<span class=\"keyword\">var</span> tctx = tCanvas.getContext(<span class=\"string\">\"2d\"</span>);</div><div class=\"line\">\t<span class=\"keyword\">var</span> maxsize = <span class=\"number\">100</span> * <span class=\"number\">1024</span>;</div><div class=\"line\">\t$(<span class=\"string\">\"#upload\"</span>).on(<span class=\"string\">\"click\"</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">\t\tfilechooser.click();</div><div class=\"line\">\t&#125;)</div><div class=\"line\">\tfilechooser.onchange = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (!<span class=\"keyword\">this</span>.files.length) <span class=\"keyword\">return</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">var</span> files = <span class=\"built_in\">Array</span>.prototype.slice.call(<span class=\"keyword\">this</span>.files);</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (files.length &gt; <span class=\"number\">9</span>) &#123;</div><div class=\"line\">\t\t\talert(<span class=\"string\">\"最多同时只可上传9张图片\"</span>);</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span>;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\tfiles.forEach(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">file, i</span>) </span>&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (!<span class=\"regexp\">/\\/(?:jpeg|png|gif)/i</span>.test(file.type)) <span class=\"keyword\">return</span>;</div><div class=\"line\">\t\t\t<span class=\"keyword\">var</span> reader = <span class=\"keyword\">new</span> FileReader();</div><div class=\"line\">\t\t\t<span class=\"keyword\">var</span> li = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"li\"</span>);</div><div class=\"line\">\t\t\t<span class=\"comment\">//          获取图片大小</span></div><div class=\"line\">\t\t\t<span class=\"keyword\">var</span> size = file.size / <span class=\"number\">1024</span> &gt; <span class=\"number\">1024</span> ? (~~(<span class=\"number\">10</span> * file.size / <span class=\"number\">1024</span> / <span class=\"number\">1024</span>)) / <span class=\"number\">10</span> + <span class=\"string\">\"MB\"</span> : ~~(file.size / <span class=\"number\">1024</span>) + <span class=\"string\">\"KB\"</span>;</div><div class=\"line\">\t\t\tli.innerHTML = <span class=\"string\">'&lt;div class=\"progress\"&gt;&lt;span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=\"size\"&gt;'</span> + size + <span class=\"string\">'&lt;/div&gt;'</span>;</div><div class=\"line\">\t\t\t$(<span class=\"string\">\".img-list\"</span>).append($(li));</div><div class=\"line\">\t\t\treader.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">var</span> result = <span class=\"keyword\">this</span>.result;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">var</span> img = <span class=\"keyword\">new</span> Image();</div><div class=\"line\">\t\t\t\timg.src = result;</div><div class=\"line\">\t\t\t\t$(li).css(<span class=\"string\">\"background-image\"</span>, <span class=\"string\">\"url(\"</span> + result + <span class=\"string\">\")\"</span>);</div><div class=\"line\">\t\t\t\t<span class=\"comment\">//如果图片大小小于100kb，则直接上传</span></div><div class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (result.length &lt;= maxsize) &#123;</div><div class=\"line\">\t\t\t\t\timg = <span class=\"literal\">null</span>;</div><div class=\"line\">\t\t\t\t\tupload(result, file.type, $(li));</div><div class=\"line\">\t\t\t\t\t<span class=\"keyword\">return</span>;</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t\t<span class=\"comment\">//      图片加载完毕之后进行压缩，然后上传</span></div><div class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (img.complete) &#123;</div><div class=\"line\">\t\t\t\t\tcallback();</div><div class=\"line\">\t\t\t\t&#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">\t\t\t\t\timg.onload = callback;</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t\t<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">callback</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">\t\t\t\t\t<span class=\"keyword\">var</span> data = compress(img);</div><div class=\"line\">\t\t\t\t\tupload(data, file.type, $(li));</div><div class=\"line\">\t\t\t\t\timg = <span class=\"literal\">null</span>;</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t&#125;;</div><div class=\"line\">\t\t\treader.readAsDataURL(file);</div><div class=\"line\">\t\t&#125;)</div><div class=\"line\">\t&#125;;</div><div class=\"line\">\t<span class=\"comment\">//    使用canvas对大图片进行压缩</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">compress</span>(<span class=\"params\">img</span>) </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">var</span> initSize = img.src.length;</div><div class=\"line\">\t\t<span class=\"keyword\">var</span> width = img.width;</div><div class=\"line\">\t\t<span class=\"keyword\">var</span> height = img.height;</div><div class=\"line\">\t\t<span class=\"comment\">//如果图片大于四百万像素，计算压缩比并将大小压至400万以下</span></div><div class=\"line\">\t\t<span class=\"keyword\">var</span> ratio;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> ((ratio = width * height / <span class=\"number\">4000000</span>) &gt; <span class=\"number\">1</span>) &#123;</div><div class=\"line\">\t\t\tratio = <span class=\"built_in\">Math</span>.sqrt(ratio);</div><div class=\"line\">\t\t\twidth /= ratio;</div><div class=\"line\">\t\t\theight /= ratio;</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">\t\t\tratio = <span class=\"number\">1</span>;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\tcanvas.width = width;</div><div class=\"line\">\t\tcanvas.height = height;</div><div class=\"line\">\t\t<span class=\"comment\">//        铺底色</span></div><div class=\"line\">\t\tctx.fillStyle = <span class=\"string\">\"#fff\"</span>;</div><div class=\"line\">\t\tctx.fillRect(<span class=\"number\">0</span>, <span class=\"number\">0</span>, canvas.width, canvas.height);</div><div class=\"line\">\t\t<span class=\"comment\">//如果图片像素大于100万则使用瓦片绘制</span></div><div class=\"line\">\t\t<span class=\"keyword\">var</span> count;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> ((count = width * height / <span class=\"number\">1000000</span>) &gt; <span class=\"number\">1</span>) &#123;</div><div class=\"line\">\t\t\tcount = ~~(<span class=\"built_in\">Math</span>.sqrt(count) + <span class=\"number\">1</span>); <span class=\"comment\">//计算要分成多少块瓦片</span></div><div class=\"line\">\t\t\t<span class=\"comment\">//            计算每块瓦片的宽和高</span></div><div class=\"line\">\t\t\t<span class=\"keyword\">var</span> nw = ~~(width / count);</div><div class=\"line\">\t\t\t<span class=\"keyword\">var</span> nh = ~~(height / count);</div><div class=\"line\">\t\t\ttCanvas.width = nw;</div><div class=\"line\">\t\t\ttCanvas.height = nh;</div><div class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; count; i++) &#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> j = <span class=\"number\">0</span>; j &lt; count; j++) &#123;</div><div class=\"line\">\t\t\t\t\ttctx.drawImage(img, i * nw * ratio, j * nh * ratio, nw * ratio, nh * ratio, <span class=\"number\">0</span>, <span class=\"number\">0</span>, nw, nh);</div><div class=\"line\">\t\t\t\t\tctx.drawImage(tCanvas, i * nw, j * nh, nw, nh);</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">\t\t\tctx.drawImage(img, <span class=\"number\">0</span>, <span class=\"number\">0</span>, width, height);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"comment\">//进行最小压缩</span></div><div class=\"line\">\t\t<span class=\"keyword\">var</span> ndata = canvas.toDataURL(<span class=\"string\">'image/jpeg'</span>, <span class=\"number\">0.1</span>);</div><div class=\"line\">\t\t<span class=\"built_in\">console</span>.log(<span class=\"string\">'压缩前：'</span> + initSize);</div><div class=\"line\">\t\t<span class=\"built_in\">console</span>.log(<span class=\"string\">'压缩后：'</span> + ndata.length);</div><div class=\"line\">\t\t<span class=\"built_in\">console</span>.log(<span class=\"string\">'压缩率：'</span> + ~~(<span class=\"number\">100</span> * (initSize - ndata.length) / initSize) + <span class=\"string\">\"%\"</span>);</div><div class=\"line\">\t\ttCanvas.width = tCanvas.height = canvas.width = canvas.height = <span class=\"number\">0</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> ndata;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"comment\">//    图片上传，将base64的图片转成二进制对象，塞进formdata上传</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">upload</span>(<span class=\"params\">basestr, type, $li</span>) </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">var</span> text = <span class=\"built_in\">window</span>.atob(basestr.split(<span class=\"string\">\",\"</span>)[<span class=\"number\">1</span>]);</div><div class=\"line\">\t\t<span class=\"keyword\">var</span> buffer = <span class=\"keyword\">new</span> <span class=\"built_in\">Uint8Array</span>(text.length);</div><div class=\"line\">\t\t<span class=\"keyword\">var</span> pecent = <span class=\"number\">0</span>,</div><div class=\"line\">\t\t\tloop = <span class=\"literal\">null</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; text.length; i++) &#123;</div><div class=\"line\">\t\t\tbuffer[i] = text.charCodeAt(i);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">var</span> blob = getBlob([buffer], type);</div><div class=\"line\">\t\t<span class=\"keyword\">var</span> xhr = <span class=\"keyword\">new</span> XMLHttpRequest();</div><div class=\"line\">\t\t<span class=\"keyword\">var</span> formdata = getFormData();</div><div class=\"line\">\t\tformdata.append(<span class=\"string\">'imagefile'</span>, blob);</div><div class=\"line\">\t\txhr.open(<span class=\"string\">'post'</span>, <span class=\"string\">'/cupload'</span>);</div><div class=\"line\">\t\txhr.onreadystatechange = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (xhr.readyState == <span class=\"number\">4</span> &amp;&amp; xhr.status == <span class=\"number\">200</span>) &#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">var</span> jsonData = <span class=\"built_in\">JSON</span>.parse(xhr.responseText);</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">var</span> imagedata = jsonData[<span class=\"number\">0</span>] || &#123;&#125;;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">var</span> text = imagedata.path ? <span class=\"string\">'上传成功'</span> : <span class=\"string\">'上传失败'</span>;</div><div class=\"line\">\t\t\t\t<span class=\"built_in\">console</span>.log(text + <span class=\"string\">'：'</span> + imagedata.path);</div><div class=\"line\">\t\t\t\tclearInterval(loop);</div><div class=\"line\">\t\t\t\t<span class=\"comment\">//当收到该消息时上传完毕</span></div><div class=\"line\">\t\t\t\t$li.find(<span class=\"string\">\".progress span\"</span>).animate(&#123;</div><div class=\"line\">\t\t\t\t\t<span class=\"string\">'width'</span>: <span class=\"string\">\"100%\"</span></div><div class=\"line\">\t\t\t\t&#125;, pecent &lt; <span class=\"number\">95</span> ? <span class=\"number\">200</span> : <span class=\"number\">0</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">\t\t\t\t\t$(<span class=\"keyword\">this</span>).html(text);</div><div class=\"line\">\t\t\t\t&#125;);</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (!imagedata.path) <span class=\"keyword\">return</span>;</div><div class=\"line\">\t\t\t\t$(<span class=\"string\">\".pic-list\"</span>).append(<span class=\"string\">'&lt;a href=\"'</span> + imagedata.path + <span class=\"string\">'\"&gt;'</span> + imagedata.name + <span class=\"string\">'（'</span> + imagedata.size + <span class=\"string\">'）&lt;img src=\"'</span> + imagedata.path + <span class=\"string\">'\" /&gt;&lt;/a&gt;'</span>);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;;</div><div class=\"line\">\t\t<span class=\"comment\">//数据发送进度，前50%展示该进度</span></div><div class=\"line\">\t\txhr.upload.addEventListener(<span class=\"string\">'progress'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (loop) <span class=\"keyword\">return</span>;</div><div class=\"line\">\t\t\tpecent = ~~(<span class=\"number\">100</span> * e.loaded / e.total) / <span class=\"number\">2</span>;</div><div class=\"line\">\t\t\t$li.find(<span class=\"string\">\".progress span\"</span>).css(<span class=\"string\">'width'</span>, pecent + <span class=\"string\">\"%\"</span>);</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (pecent == <span class=\"number\">50</span>) &#123;</div><div class=\"line\">\t\t\t\tmockProgress();</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;, <span class=\"literal\">false</span>);</div><div class=\"line\">\t\t<span class=\"comment\">//数据后50%用模拟进度</span></div><div class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">mockProgress</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (loop) <span class=\"keyword\">return</span>;</div><div class=\"line\">\t\t\tloop = setInterval(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">\t\t\t\tpecent++;</div><div class=\"line\">\t\t\t\t$li.find(<span class=\"string\">\".progress span\"</span>).css(<span class=\"string\">'width'</span>, pecent + <span class=\"string\">\"%\"</span>);</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (pecent == <span class=\"number\">99</span>) &#123;</div><div class=\"line\">\t\t\t\t\tclearInterval(loop);</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t&#125;, <span class=\"number\">100</span>)</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\txhr.send(formdata);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 获取blob对象的兼容性写法</div><div class=\"line\">\t * @param buffer</div><div class=\"line\">\t * @param format</div><div class=\"line\">\t * @returns &#123;*&#125;</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getBlob</span>(<span class=\"params\">buffer, format</span>) </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Blob(buffer, &#123;</div><div class=\"line\">\t\t\t\t<span class=\"attr\">type</span>: format</div><div class=\"line\">\t\t\t&#125;);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (e) &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">var</span> bb = <span class=\"keyword\">new</span>(<span class=\"built_in\">window</span>.BlobBuilder || <span class=\"built_in\">window</span>.WebKitBlobBuilder || <span class=\"built_in\">window</span>.MSBlobBuilder);</div><div class=\"line\">\t\t\tbuffer.forEach(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">buf</span>) </span>&#123;</div><div class=\"line\">\t\t\t\tbb.append(buf);</div><div class=\"line\">\t\t\t&#125;);</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> bb.getBlob(format);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 获取formdata</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getFormData</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">var</span> isNeedShim = ~navigator.userAgent.indexOf(<span class=\"string\">'Android'</span>) &amp;&amp;</div><div class=\"line\">\t\t\t~navigator.vendor.indexOf(<span class=\"string\">'Google'</span>) &amp;&amp;</div><div class=\"line\">\t\t\t!~navigator.userAgent.indexOf(<span class=\"string\">'Chrome'</span>) &amp;&amp;</div><div class=\"line\">\t\t\tnavigator.userAgent.match(<span class=\"regexp\">/AppleWebKit\\/(\\d+)/</span>).pop() &lt;= <span class=\"number\">534</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> isNeedShim ? <span class=\"keyword\">new</span> FormDataShim() : <span class=\"keyword\">new</span> FormData()</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * formdata 补丁, 给不支持formdata上传blob的android机打补丁</div><div class=\"line\">\t * @constructor</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">FormDataShim</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">\t\t<span class=\"built_in\">console</span>.warn(<span class=\"string\">'using formdata shim'</span>);</div><div class=\"line\">\t\t<span class=\"keyword\">var</span> o = <span class=\"keyword\">this</span>,</div><div class=\"line\">\t\t\tparts = [],</div><div class=\"line\">\t\t\tboundary = <span class=\"built_in\">Array</span>(<span class=\"number\">21</span>).join(<span class=\"string\">'-'</span>) + (+<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>() * (<span class=\"number\">1e16</span> * <span class=\"built_in\">Math</span>.random())).toString(<span class=\"number\">36</span>),</div><div class=\"line\">\t\t\toldSend = XMLHttpRequest.prototype.send;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.append = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">name, value, filename</span>) </span>&#123;</div><div class=\"line\">\t\t\tparts.push(<span class=\"string\">'--'</span> + boundary + <span class=\"string\">'\\r\\nContent-Disposition: form-data; name=\"'</span> + name + <span class=\"string\">'\"'</span>);</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (value <span class=\"keyword\">instanceof</span> Blob) &#123;</div><div class=\"line\">\t\t\t\tparts.push(<span class=\"string\">'; filename=\"'</span> + (filename || <span class=\"string\">'blob'</span>) + <span class=\"string\">'\"\\r\\nContent-Type: '</span> + value.type + <span class=\"string\">'\\r\\n\\r\\n'</span>);</div><div class=\"line\">\t\t\t\tparts.push(value);</div><div class=\"line\">\t\t\t&#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">\t\t\t\tparts.push(<span class=\"string\">'\\r\\n\\r\\n'</span> + value);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\tparts.push(<span class=\"string\">'\\r\\n'</span>);</div><div class=\"line\">\t\t&#125;;</div><div class=\"line\">\t\t<span class=\"comment\">// Override XHR send()</span></div><div class=\"line\">\t\tXMLHttpRequest.prototype.send = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">val</span>) </span>&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">var</span> fr,</div><div class=\"line\">\t\t\t\tdata,</div><div class=\"line\">\t\t\t\toXHR = <span class=\"keyword\">this</span>;</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (val === o) &#123;</div><div class=\"line\">\t\t\t\t<span class=\"comment\">// Append the final boundary string</span></div><div class=\"line\">\t\t\t\tparts.push(<span class=\"string\">'--'</span> + boundary + <span class=\"string\">'--\\r\\n'</span>);</div><div class=\"line\">\t\t\t\t<span class=\"comment\">// Create the blob</span></div><div class=\"line\">\t\t\t\tdata = getBlob(parts);</div><div class=\"line\">\t\t\t\t<span class=\"comment\">// Set up and read the blob into an array to be sent</span></div><div class=\"line\">\t\t\t\tfr = <span class=\"keyword\">new</span> FileReader();</div><div class=\"line\">\t\t\t\tfr.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">\t\t\t\t\toldSend.call(oXHR, fr.result);</div><div class=\"line\">\t\t\t\t&#125;;</div><div class=\"line\">\t\t\t\tfr.onerror = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">err</span>) </span>&#123;</div><div class=\"line\">\t\t\t\t\t<span class=\"keyword\">throw</span> err;</div><div class=\"line\">\t\t\t\t&#125;;</div><div class=\"line\">\t\t\t\tfr.readAsArrayBuffer(data);</div><div class=\"line\">\t\t\t\t<span class=\"comment\">// Set the multipart content type and boudary</span></div><div class=\"line\">\t\t\t\t<span class=\"keyword\">this</span>.setRequestHeader(<span class=\"string\">'Content-Type'</span>, <span class=\"string\">'multipart/form-data; boundary='</span> + boundary);</div><div class=\"line\">\t\t\t\tXMLHttpRequest.prototype.send = oldSend;</div><div class=\"line\">\t\t\t&#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">\t\t\t\toldSend.call(<span class=\"keyword\">this</span>, val);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n"},{"title":"省略号动画","date":"2017-06-05T02:40:42.000Z","_content":"一些漂亮的等待动画：[点这里](http://simbyone.com/demo/30-css-page-preload-animations/)\n\n三个点的简单等待的动画效果：\n\n\t.dotting{\n\t        display: inline-block; \n\t        width: 20px; \n\t        min-height: 4px;\n\t        padding-right: 4px;\n\t        border-left: 4px solid currentColor;\n\t         border-right: 4px solid currentColor;\n\t        background-color: currentColor; \n\t        background-clip: content-box;\n\t        box-sizing: border-box;\n\t        -webkit-animation: dot 4s infinite step-start both;\n\t        animation: dot 4s infinite step-start both;\n\t        &:before{\n\t            content: '...'; /* IE8 */\n\t        }\n\t        &::before{\n\t            content: '';\n\t        }\n\t    }\n\t  :root .dotting { margin-left: 4px; padding-left: 4px; } /* IE9+ */\n\t  @-webkit-keyframes dot {\n\t      25% {\n\t        border-color: transparent; background-color: transparent; \t\t\t  }\n\t      50% {\n\t      \tborder-right-color: transparent; background-color: transparent; \n\t      }\n\t      75% { border-right-color: transparent; }\n\t      }\n\t  @keyframes dot {\n\t    25% { border-color: transparent; background-color: transparent; }\n\t    50% { border-right-color: transparent; background-color: transparent; }\n\t    75% { border-right-color: transparent; }\n\t  }","source":"_posts/省略号动画.md","raw":"---\ntitle: 省略号动画\ndate: 2017-06-05 10:40:42\ntags: 学习\n---\n一些漂亮的等待动画：[点这里](http://simbyone.com/demo/30-css-page-preload-animations/)\n\n三个点的简单等待的动画效果：\n\n\t.dotting{\n\t        display: inline-block; \n\t        width: 20px; \n\t        min-height: 4px;\n\t        padding-right: 4px;\n\t        border-left: 4px solid currentColor;\n\t         border-right: 4px solid currentColor;\n\t        background-color: currentColor; \n\t        background-clip: content-box;\n\t        box-sizing: border-box;\n\t        -webkit-animation: dot 4s infinite step-start both;\n\t        animation: dot 4s infinite step-start both;\n\t        &:before{\n\t            content: '...'; /* IE8 */\n\t        }\n\t        &::before{\n\t            content: '';\n\t        }\n\t    }\n\t  :root .dotting { margin-left: 4px; padding-left: 4px; } /* IE9+ */\n\t  @-webkit-keyframes dot {\n\t      25% {\n\t        border-color: transparent; background-color: transparent; \t\t\t  }\n\t      50% {\n\t      \tborder-right-color: transparent; background-color: transparent; \n\t      }\n\t      75% { border-right-color: transparent; }\n\t      }\n\t  @keyframes dot {\n\t    25% { border-color: transparent; background-color: transparent; }\n\t    50% { border-right-color: transparent; background-color: transparent; }\n\t    75% { border-right-color: transparent; }\n\t  }","slug":"省略号动画","published":1,"updated":"2017-06-13T01:11:30.830Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3wffvng000fvsrjmcd3rhck","content":"<p>一些漂亮的等待动画：<a href=\"http://simbyone.com/demo/30-css-page-preload-animations/\" target=\"_blank\" rel=\"external\">点这里</a></p>\n<p>三个点的简单等待的动画效果：</p>\n<pre><code>.dotting{\n        display: inline-block; \n        width: 20px; \n        min-height: 4px;\n        padding-right: 4px;\n        border-left: 4px solid currentColor;\n         border-right: 4px solid currentColor;\n        background-color: currentColor; \n        background-clip: content-box;\n        box-sizing: border-box;\n        -webkit-animation: dot 4s infinite step-start both;\n        animation: dot 4s infinite step-start both;\n        &amp;:before{\n            content: &apos;...&apos;; /* IE8 */\n        }\n        &amp;::before{\n            content: &apos;&apos;;\n        }\n    }\n  :root .dotting { margin-left: 4px; padding-left: 4px; } /* IE9+ */\n  @-webkit-keyframes dot {\n      25% {\n        border-color: transparent; background-color: transparent;               }\n      50% {\n          border-right-color: transparent; background-color: transparent; \n      }\n      75% { border-right-color: transparent; }\n      }\n  @keyframes dot {\n    25% { border-color: transparent; background-color: transparent; }\n    50% { border-right-color: transparent; background-color: transparent; }\n    75% { border-right-color: transparent; }\n  }\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<p>一些漂亮的等待动画：<a href=\"http://simbyone.com/demo/30-css-page-preload-animations/\" target=\"_blank\" rel=\"external\">点这里</a></p>\n<p>三个点的简单等待的动画效果：</p>\n<pre><code>.dotting{\n        display: inline-block; \n        width: 20px; \n        min-height: 4px;\n        padding-right: 4px;\n        border-left: 4px solid currentColor;\n         border-right: 4px solid currentColor;\n        background-color: currentColor; \n        background-clip: content-box;\n        box-sizing: border-box;\n        -webkit-animation: dot 4s infinite step-start both;\n        animation: dot 4s infinite step-start both;\n        &amp;:before{\n            content: &apos;...&apos;; /* IE8 */\n        }\n        &amp;::before{\n            content: &apos;&apos;;\n        }\n    }\n  :root .dotting { margin-left: 4px; padding-left: 4px; } /* IE9+ */\n  @-webkit-keyframes dot {\n      25% {\n        border-color: transparent; background-color: transparent;               }\n      50% {\n          border-right-color: transparent; background-color: transparent; \n      }\n      75% { border-right-color: transparent; }\n      }\n  @keyframes dot {\n    25% { border-color: transparent; background-color: transparent; }\n    50% { border-right-color: transparent; background-color: transparent; }\n    75% { border-right-color: transparent; }\n  }\n</code></pre>"},{"title":"移动端touch事件整理","date":"2017-05-28T06:44:44.000Z","_content":"移动端触摸事件\n\n* `touchstart事件`：触摸时触发（坐标信息可以从`touches`里获得）\n* `touchmove事件`：滑动时触发（同上）\n* `touched事件`：手指离开时触发（需要从`changeTouches`中获取离开时坐标）\n* `touchcancel事件`：当系统停止跟踪触摸的时候触发\n\n上面的这些事件都会冒泡，也都可以取消。虽然这些触摸事件没有在DOM规范中定义，但是它们却是以兼容DOM的方式实现的。所以，每个触摸事件的event对象都提供了在鼠标实践中常见的属性：bubbles(起泡事件的类型)、cancelable(是否用 preventDefault() 方法可以取消与事件关联的默认动作)、clientX(返回当事件被触发时，鼠标指针的水平坐标)、clientY(返回当事件触发时，鼠标指针的垂直坐标)、screenX(当某个事件被触发时，鼠标指针的水平坐标)和screenY(返回当某个事件被触发时，鼠标指针的垂直坐标)。除了常见的DOM属性，触摸事件还包含下面三个用于跟踪触摸的属性。\n* `touches`：表示当前跟踪的触摸操作的touch对象的数组。\n* `targetTouches`：特定于事件目标的Touch对象的数组。\n* `changeTouches`：表示自上次触摸以来发生了什么改变的Touch对象的数组。\n\n 每个Touch对象包含的属性如下。\n * `clientX`：触摸目标在视口中的x坐标。\n * `clientY`：触摸目标在视口中的y坐标。\n * `identifier`：标识触摸的唯一ID。\n * `pageX`：触摸目标在页面中的x坐标。\n * `pageY`：触摸目标在页面中的y坐标。\n * `screenX`：触摸目标在屏幕中的x坐标。\n * `screenY`：触摸目标在屏幕中的y坐标。\n * `target`：触目的DOM节点目标。","source":"_posts/移动端touch事件.md","raw":"---\ntitle: 移动端touch事件整理\ndate: 2017-05-28 14:44:44\ntags: 学习\n---\n移动端触摸事件\n\n* `touchstart事件`：触摸时触发（坐标信息可以从`touches`里获得）\n* `touchmove事件`：滑动时触发（同上）\n* `touched事件`：手指离开时触发（需要从`changeTouches`中获取离开时坐标）\n* `touchcancel事件`：当系统停止跟踪触摸的时候触发\n\n上面的这些事件都会冒泡，也都可以取消。虽然这些触摸事件没有在DOM规范中定义，但是它们却是以兼容DOM的方式实现的。所以，每个触摸事件的event对象都提供了在鼠标实践中常见的属性：bubbles(起泡事件的类型)、cancelable(是否用 preventDefault() 方法可以取消与事件关联的默认动作)、clientX(返回当事件被触发时，鼠标指针的水平坐标)、clientY(返回当事件触发时，鼠标指针的垂直坐标)、screenX(当某个事件被触发时，鼠标指针的水平坐标)和screenY(返回当某个事件被触发时，鼠标指针的垂直坐标)。除了常见的DOM属性，触摸事件还包含下面三个用于跟踪触摸的属性。\n* `touches`：表示当前跟踪的触摸操作的touch对象的数组。\n* `targetTouches`：特定于事件目标的Touch对象的数组。\n* `changeTouches`：表示自上次触摸以来发生了什么改变的Touch对象的数组。\n\n 每个Touch对象包含的属性如下。\n * `clientX`：触摸目标在视口中的x坐标。\n * `clientY`：触摸目标在视口中的y坐标。\n * `identifier`：标识触摸的唯一ID。\n * `pageX`：触摸目标在页面中的x坐标。\n * `pageY`：触摸目标在页面中的y坐标。\n * `screenX`：触摸目标在屏幕中的x坐标。\n * `screenY`：触摸目标在屏幕中的y坐标。\n * `target`：触目的DOM节点目标。","slug":"移动端touch事件","published":1,"updated":"2017-06-13T01:11:30.831Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3wffvnj000hvsrjc5w39rhm","content":"<p>移动端触摸事件</p>\n<ul>\n<li><code>touchstart事件</code>：触摸时触发（坐标信息可以从<code>touches</code>里获得）</li>\n<li><code>touchmove事件</code>：滑动时触发（同上）</li>\n<li><code>touched事件</code>：手指离开时触发（需要从<code>changeTouches</code>中获取离开时坐标）</li>\n<li><code>touchcancel事件</code>：当系统停止跟踪触摸的时候触发</li>\n</ul>\n<p>上面的这些事件都会冒泡，也都可以取消。虽然这些触摸事件没有在DOM规范中定义，但是它们却是以兼容DOM的方式实现的。所以，每个触摸事件的event对象都提供了在鼠标实践中常见的属性：bubbles(起泡事件的类型)、cancelable(是否用 preventDefault() 方法可以取消与事件关联的默认动作)、clientX(返回当事件被触发时，鼠标指针的水平坐标)、clientY(返回当事件触发时，鼠标指针的垂直坐标)、screenX(当某个事件被触发时，鼠标指针的水平坐标)和screenY(返回当某个事件被触发时，鼠标指针的垂直坐标)。除了常见的DOM属性，触摸事件还包含下面三个用于跟踪触摸的属性。</p>\n<ul>\n<li><code>touches</code>：表示当前跟踪的触摸操作的touch对象的数组。</li>\n<li><code>targetTouches</code>：特定于事件目标的Touch对象的数组。</li>\n<li><p><code>changeTouches</code>：表示自上次触摸以来发生了什么改变的Touch对象的数组。</p>\n<p>每个Touch对象包含的属性如下。</p>\n<ul>\n<li><code>clientX</code>：触摸目标在视口中的x坐标。</li>\n<li><code>clientY</code>：触摸目标在视口中的y坐标。</li>\n<li><code>identifier</code>：标识触摸的唯一ID。</li>\n<li><code>pageX</code>：触摸目标在页面中的x坐标。</li>\n<li><code>pageY</code>：触摸目标在页面中的y坐标。</li>\n<li><code>screenX</code>：触摸目标在屏幕中的x坐标。</li>\n<li><code>screenY</code>：触摸目标在屏幕中的y坐标。</li>\n<li><code>target</code>：触目的DOM节点目标。</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>移动端触摸事件</p>\n<ul>\n<li><code>touchstart事件</code>：触摸时触发（坐标信息可以从<code>touches</code>里获得）</li>\n<li><code>touchmove事件</code>：滑动时触发（同上）</li>\n<li><code>touched事件</code>：手指离开时触发（需要从<code>changeTouches</code>中获取离开时坐标）</li>\n<li><code>touchcancel事件</code>：当系统停止跟踪触摸的时候触发</li>\n</ul>\n<p>上面的这些事件都会冒泡，也都可以取消。虽然这些触摸事件没有在DOM规范中定义，但是它们却是以兼容DOM的方式实现的。所以，每个触摸事件的event对象都提供了在鼠标实践中常见的属性：bubbles(起泡事件的类型)、cancelable(是否用 preventDefault() 方法可以取消与事件关联的默认动作)、clientX(返回当事件被触发时，鼠标指针的水平坐标)、clientY(返回当事件触发时，鼠标指针的垂直坐标)、screenX(当某个事件被触发时，鼠标指针的水平坐标)和screenY(返回当某个事件被触发时，鼠标指针的垂直坐标)。除了常见的DOM属性，触摸事件还包含下面三个用于跟踪触摸的属性。</p>\n<ul>\n<li><code>touches</code>：表示当前跟踪的触摸操作的touch对象的数组。</li>\n<li><code>targetTouches</code>：特定于事件目标的Touch对象的数组。</li>\n<li><p><code>changeTouches</code>：表示自上次触摸以来发生了什么改变的Touch对象的数组。</p>\n<p>每个Touch对象包含的属性如下。</p>\n<ul>\n<li><code>clientX</code>：触摸目标在视口中的x坐标。</li>\n<li><code>clientY</code>：触摸目标在视口中的y坐标。</li>\n<li><code>identifier</code>：标识触摸的唯一ID。</li>\n<li><code>pageX</code>：触摸目标在页面中的x坐标。</li>\n<li><code>pageY</code>：触摸目标在页面中的y坐标。</li>\n<li><code>screenX</code>：触摸目标在屏幕中的x坐标。</li>\n<li><code>screenY</code>：触摸目标在屏幕中的y坐标。</li>\n<li><code>target</code>：触目的DOM节点目标。</li>\n</ul>\n</li>\n</ul>\n"},{"title":"防止页面被iframe嵌套","date":"2017-06-06T02:40:42.000Z","_content":"自己的网页被别人盗用很不爽吧，以下是几种解方案\n\n1. 方案一\n        if (top != self) {\n          top.location = self.location;\n        }\n2. 方案二\n         if (self == top) {\n           var theBody = document.getElementsByTagName('body')[0];\n           theBody.style.display = \"block\";\n         } else {\n           top.location = self.location;\n         }\n3. 方案三\n        在响应头里加一个X-Frame-Options\n           取值有三种，大部分浏览器都支持：\n          1. DENY：浏览器拒绝当前页面加载任何Frame页面\n          2. SAMEORIGIN：frame页面的地址只能为同源域名下的页面\n          3. ALLOW-FROM origin：origin为允许frame加载的页面地址","source":"_posts/防止网页被iframe嵌套.md","raw":"---\ntitle: 防止页面被iframe嵌套\ndate: 2017-06-6 10:40:42\ntags: 学习\n---\n自己的网页被别人盗用很不爽吧，以下是几种解方案\n\n1. 方案一\n        if (top != self) {\n          top.location = self.location;\n        }\n2. 方案二\n         if (self == top) {\n           var theBody = document.getElementsByTagName('body')[0];\n           theBody.style.display = \"block\";\n         } else {\n           top.location = self.location;\n         }\n3. 方案三\n        在响应头里加一个X-Frame-Options\n           取值有三种，大部分浏览器都支持：\n          1. DENY：浏览器拒绝当前页面加载任何Frame页面\n          2. SAMEORIGIN：frame页面的地址只能为同源域名下的页面\n          3. ALLOW-FROM origin：origin为允许frame加载的页面地址","slug":"防止网页被iframe嵌套","published":1,"updated":"2017-06-13T01:11:30.831Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3wffvnm000jvsrjnv2do759","content":"<p>自己的网页被别人盗用很不爽吧，以下是几种解方案</p>\n<ol>\n<li>方案一<pre><code>if (top != self) {\n  top.location = self.location;\n}\n</code></pre></li>\n<li>方案二<pre><code>if (self == top) {\n  var theBody = document.getElementsByTagName(&apos;body&apos;)[0];\n  theBody.style.display = &quot;block&quot;;\n} else {\n  top.location = self.location;\n}\n</code></pre></li>\n<li>方案三<pre><code>在响应头里加一个X-Frame-Options\n   取值有三种，大部分浏览器都支持：\n  1. DENY：浏览器拒绝当前页面加载任何Frame页面\n  2. SAMEORIGIN：frame页面的地址只能为同源域名下的页面\n  3. ALLOW-FROM origin：origin为允许frame加载的页面地址\n</code></pre></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>自己的网页被别人盗用很不爽吧，以下是几种解方案</p>\n<ol>\n<li>方案一<pre><code>if (top != self) {\n  top.location = self.location;\n}\n</code></pre></li>\n<li>方案二<pre><code>if (self == top) {\n  var theBody = document.getElementsByTagName(&apos;body&apos;)[0];\n  theBody.style.display = &quot;block&quot;;\n} else {\n  top.location = self.location;\n}\n</code></pre></li>\n<li>方案三<pre><code>在响应头里加一个X-Frame-Options\n   取值有三种，大部分浏览器都支持：\n  1. DENY：浏览器拒绝当前页面加载任何Frame页面\n  2. SAMEORIGIN：frame页面的地址只能为同源域名下的页面\n  3. ALLOW-FROM origin：origin为允许frame加载的页面地址\n</code></pre></li>\n</ol>\n"}],"PostAsset":[{"_id":"source/_posts/ejs模板语法/filter1.png","slug":"filter1.png","post":"cj3wffvm60000vsrjm0lrr5oe","modified":1,"renderable":0},{"_id":"source/_posts/ejs模板语法/filter3.png","slug":"filter3.png","post":"cj3wffvm60000vsrjm0lrr5oe","modified":1,"renderable":0},{"_id":"source/_posts/ejs模板语法/option.png","slug":"option.png","post":"cj3wffvm60000vsrjm0lrr5oe","modified":1,"renderable":0},{"_id":"source/_posts/ejs模板语法/filter2.png","slug":"filter2.png","post":"cj3wffvm60000vsrjm0lrr5oe","modified":1,"renderable":0}],"PostCategory":[],"PostTag":[{"post_id":"cj3wffvm60000vsrjm0lrr5oe","tag_id":"cj3wffvmn0003vsrjijvyfky9","_id":"cj3wffvn50008vsrjgh38d62w"},{"post_id":"cj3wffvn50009vsrj6a91iebh","tag_id":"cj3wffvmn0003vsrjijvyfky9","_id":"cj3wffvnc000cvsrjyf0hunzr"},{"post_id":"cj3wffvmi0002vsrjouex4qp3","tag_id":"cj3wffvn40007vsrjs6dvjg2x","_id":"cj3wffvnf000evsrjsapb3utb"},{"post_id":"cj3wffvn8000avsrjs7cfy2tq","tag_id":"cj3wffvmn0003vsrjijvyfky9","_id":"cj3wffvni000gvsrjs5be5pn0"},{"post_id":"cj3wffvnd000dvsrjhq9gdv6i","tag_id":"cj3wffvmn0003vsrjijvyfky9","_id":"cj3wffvnl000ivsrjztw7jdfe"},{"post_id":"cj3wffvmz0005vsrjih5k34an","tag_id":"cj3wffvnc000bvsrjf9tx4wnx","_id":"cj3wffvno000kvsrjglqanotz"},{"post_id":"cj3wffvng000fvsrjmcd3rhck","tag_id":"cj3wffvmn0003vsrjijvyfky9","_id":"cj3wffvnp000lvsrj4efe5h7m"},{"post_id":"cj3wffvnj000hvsrjc5w39rhm","tag_id":"cj3wffvmn0003vsrjijvyfky9","_id":"cj3wffvnq000mvsrjik0jxx2g"},{"post_id":"cj3wffvnm000jvsrjnv2do759","tag_id":"cj3wffvmn0003vsrjijvyfky9","_id":"cj3wffvnq000nvsrjmp38nglt"}],"Tag":[{"name":"学习","_id":"cj3wffvmn0003vsrjijvyfky9"},{"name":"git","_id":"cj3wffvn40007vsrjs6dvjg2x"},{"name":"随笔","_id":"cj3wffvnc000bvsrjf9tx4wnx"}]}}